<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\stm32f4Demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\stm32f4Demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sat Mar 17 22:08:21 2018
<BR><P>
<H3>Maximum Stack Usage =       1520 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
task2_tgui(void*) &rArr; TGuiRun() &rArr; TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool) &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[25]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">ADC_IRQHandler</a><BR>
 <LI><a href="#[256]">TWidget::rectCut(TRect*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[256]">TWidget::rectCut(TRect*)</a><BR>
 <LI><a href="#[22a]">TObject::destroyChild(TObject*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22a]">TObject::destroyChild(TObject*)</a><BR>
 <LI><a href="#[21f]">TWidget::chgChildsXY(TWidget*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21f]">TWidget::chgChildsXY(TWidget*)</a><BR>
 <LI><a href="#[243]">TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[243]">TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)</a><BR>
 <LI><a href="#[1f3]">TWidget::showAll(TWidget*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f3]">TWidget::showAll(TWidget*)</a><BR>
 <LI><a href="#[1f1]">TApplication::visitAll(TObject*, TApplication*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f1]">TApplication::visitAll(TObject*, TApplication*)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[25]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[d]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[27]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[28]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[29]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[26]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[55]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">DCMI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[21]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[22]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[23]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[24]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[42]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">DMA2D_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[10]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[50]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[19]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3b]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1a]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1b]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1c]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1d]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2a]">EXTI9_5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[17]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[43]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[b]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[33]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[32]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[35]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[34]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6b]">LTDC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[c]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">OTG_FS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3d]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[60]">OTG_HS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[14]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[11]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[18]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3c]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[16]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[9]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">SDIO_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">SDRAMConfig</a> from sdram_conf.o(i.SDRAMConfig) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[36]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[37]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[46]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[68]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[69]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[12]">SysTick_Handler</a> from port.o(i.SysTick_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[15]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2b]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2e]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2d]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2c]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2f]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[30]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[31]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[49]">TIM6_DAC_IRQHandler</a> from stm32f4xx_it.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">TIM7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3e]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[41]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[40]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3f]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[47]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[48]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">UART7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[66]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[38]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[39]">USART2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3a]">USART3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5a]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[13]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">task0_temp(void*)</a> from main.o(i._Z10task0_tempPv) referenced from main.o(i.main)
 <LI><a href="#[77]">task2_tgui(void*)</a> from main.o(i._Z10task2_tguiPv) referenced from main.o(i.main)
 <LI><a href="#[78]">task3_driver(void*)</a> from main.o(i._Z12task3_driverPv) referenced from main.o(i.main)
 <LI><a href="#[73]">__default_new_handler()</a> from arm_newhandler_noexceptions.o(.text) referenced from new.o(i._Znwj)
 <LI><a href="#[76]">task1_led(void*)</a> from main.o(i._Z9task1_ledPv) referenced from main.o(i.main)
 <LI><a href="#[94]">TPushButton::sig_depress(long, long)</a> from tpushbutton.o(i._ZN11TPushButton11sig_depressEll) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[95]">TPushButton::sig_release(long, long)</a> from tpushbutton.o(i._ZN11TPushButton11sig_releaseEll) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[80]">TPushButton::show()</a> from tpushbutton.o(i._ZN11TPushButton4showEv) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[96]">TPushButton::release()</a> from tpushbutton.o(i._ZN11TPushButton7releaseEv) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[7e]">TPushButton::~TPushButton__deallocating()</a> from tpushbutton.o(i._ZN11TPushButtonD0Ev) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[7d]">TPushButton::~TPushButton()</a> from tguimain.o(i._ZN11TPushButtonD1Ev) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[98]">TTouchEvent::~TTouchEvent__deallocating()</a> from tapplication.o(i._ZN11TTouchEventD0Ev) referenced from tapplication.o(.constdata__ZTV11TTouchEvent)
 <LI><a href="#[97]">TTouchEvent::~TTouchEvent()</a> from tapplication.o(i._ZN11TTouchEventD1Ev) referenced from tapplication.o(.constdata__ZTV11TTouchEvent)
 <LI><a href="#[9a]">tCollection&lang;TConnection*&rang;::deleteItem(void*)</a> from tobject.o(t._ZN11tCollectionIP11TConnectionE10deleteItemEPv) referenced from tobject.o(.constdata__ZTV11tCollectionIP11TConnectionE)
 <LI><a href="#[9b]">tCollection&lang;TObject*&rang;::deleteItem(void*)</a> from tconnection.o(t._ZN11tCollectionIP7TObjectE10deleteItemEPv) referenced from tconnection.o(.constdata__ZTV11tCollectionIP7TObjectE)
 <LI><a href="#[9c]">tCollection&lang;TWidget*&rang;::deleteItem(void*)</a> from twidget.o(t._ZN11tCollectionIP7TWidgetE10deleteItemEPv) referenced from twidget.o(.constdata__ZTV11tCollectionIP7TWidgetE)
 <LI><a href="#[9d]">tWidgetList::clear()</a> from twidget.o(i._ZN11tWidgetList5clearEv) referenced from twidget.o(.constdata__ZTV11tWidgetList)
 <LI><a href="#[9f]">tWidgetList::~tWidgetList__deallocating()</a> from twidget.o(i._ZN11tWidgetListD0Ev) referenced from twidget.o(.constdata__ZTV11tWidgetList)
 <LI><a href="#[9e]">tWidgetList::~tWidgetList()</a> from twidget.o(i._ZN11tWidgetListD1Ev) referenced from twidget.o(.constdata__ZTV11tWidgetList)
 <LI><a href="#[a2]">TConnectList::clear()</a> from tobject.o(i._ZN12TConnectList5clearEv) referenced from tobject.o(.constdata__ZTV12TConnectList)
 <LI><a href="#[a7]">TRadioButton::sig_depress(long, long)</a> from tradiobutton.o(i._ZN12TRadioButton11sig_depressEll) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[a8]">TRadioButton::sig_release(long, long)</a> from tradiobutton.o(i._ZN12TRadioButton11sig_releaseEll) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[a6]">TRadioButton::show()</a> from tradiobutton.o(i._ZN12TRadioButton4showEv) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[a9]">TRadioButton::release()</a> from tradiobutton.o(i._ZN12TRadioButton7releaseEv) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[a5]">TRadioButton::~TRadioButton__deallocating()</a> from tradiobutton.o(i._ZN12TRadioButtonD0Ev) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[a4]">TRadioButton::~TRadioButton()</a> from tguimain.o(i._ZN12TRadioButtonD1Ev) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[ac]">TTouchDirver::obtainData()</a> from tdirver.o(i._ZN12TTouchDirver10obtainDataEv) referenced from tdirver.o(.constdata__ZTV12TTouchDirver)
 <LI><a href="#[ab]">TTouchDirver::dataBack()</a> from tdirver.o(i._ZN12TTouchDirver8dataBackEv) referenced from tdirver.o(.constdata__ZTV12TTouchDirver)
 <LI><a href="#[aa]">TTouchDirver::dataFront()</a> from tdirver.o(i._ZN12TTouchDirver9dataFrontEv) referenced from tdirver.o(.constdata__ZTV12TTouchDirver)
 <LI><a href="#[93]">TAbstractButton::closeEvent(TCloseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10closeEventEP11TCloseEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[93]">TAbstractButton::closeEvent(TCloseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10closeEventEP11TCloseEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[93]">TAbstractButton::closeEvent(TCloseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10closeEventEP11TCloseEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[93]">TAbstractButton::closeEvent(TCloseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10closeEventEP11TCloseEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[8e]">TAbstractButton::enterEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10enterEventEP6TEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[8e]">TAbstractButton::enterEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10enterEventEP6TEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[8e]">TAbstractButton::enterEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10enterEventEP6TEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[8e]">TAbstractButton::enterEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10enterEventEP6TEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[8f]">TAbstractButton::leaveEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10leaveEventEP6TEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[8f]">TAbstractButton::leaveEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10leaveEventEP6TEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[8f]">TAbstractButton::leaveEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10leaveEventEP6TEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[8f]">TAbstractButton::leaveEvent(TEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10leaveEventEP6TEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[90]">TAbstractButton::painTEvent(TPainTEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10painTEventEP11TPainTEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[90]">TAbstractButton::painTEvent(TPainTEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10painTEventEP11TPainTEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[90]">TAbstractButton::painTEvent(TPainTEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10painTEventEP11TPainTEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[90]">TAbstractButton::painTEvent(TPainTEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton10painTEventEP11TPainTEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[92]">TAbstractButton::resizeEvent(TResizeEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton11resizeEventEP12TResizeEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[92]">TAbstractButton::resizeEvent(TResizeEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton11resizeEventEP12TResizeEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[92]">TAbstractButton::resizeEvent(TResizeEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton11resizeEventEP12TResizeEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[92]">TAbstractButton::resizeEvent(TResizeEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton11resizeEventEP12TResizeEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[8c]">TAbstractButton::focusInEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton12focusInEventEP11TFocusEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[8c]">TAbstractButton::focusInEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton12focusInEventEP11TFocusEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[8c]">TAbstractButton::focusInEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton12focusInEventEP11TFocusEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[8c]">TAbstractButton::focusInEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton12focusInEventEP11TFocusEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[8d]">TAbstractButton::focusOuTEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13focusOuTEventEP11TFocusEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[8d]">TAbstractButton::focusOuTEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13focusOuTEventEP11TFocusEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[8d]">TAbstractButton::focusOuTEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13focusOuTEventEP11TFocusEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[8d]">TAbstractButton::focusOuTEvent(TFocusEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13focusOuTEventEP11TFocusEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[8a]">TAbstractButton::keyPressEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13keyPressEventEP9TKeyEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[8a]">TAbstractButton::keyPressEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13keyPressEventEP9TKeyEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[8a]">TAbstractButton::keyPressEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13keyPressEventEP9TKeyEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[8a]">TAbstractButton::keyPressEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton13keyPressEventEP9TKeyEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[89]">TAbstractButton::mouseMoveEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14mouseMoveEventEP11TMouseEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[89]">TAbstractButton::mouseMoveEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14mouseMoveEventEP11TMouseEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[89]">TAbstractButton::mouseMoveEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14mouseMoveEventEP11TMouseEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[89]">TAbstractButton::mouseMoveEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14mouseMoveEventEP11TMouseEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[84]">TAbstractButton::touchMoveEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14touchMoveEventEP11TTouchEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[84]">TAbstractButton::touchMoveEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14touchMoveEventEP11TTouchEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[84]">TAbstractButton::touchMoveEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14touchMoveEventEP11TTouchEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[84]">TAbstractButton::touchMoveEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton14touchMoveEventEP11TTouchEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[8b]">TAbstractButton::keyReleaseEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15keyReleaseEventEP9TKeyEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[8b]">TAbstractButton::keyReleaseEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15keyReleaseEventEP9TKeyEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[8b]">TAbstractButton::keyReleaseEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15keyReleaseEventEP9TKeyEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[8b]">TAbstractButton::keyReleaseEvent(TKeyEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15keyReleaseEventEP9TKeyEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[88]">TAbstractButton::mouseClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mouseClickEventEP11TMouseEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[88]">TAbstractButton::mouseClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mouseClickEventEP11TMouseEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[88]">TAbstractButton::mouseClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mouseClickEventEP11TMouseEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[88]">TAbstractButton::mouseClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mouseClickEventEP11TMouseEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[85]">TAbstractButton::mousePressEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mousePressEventEP11TMouseEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[85]">TAbstractButton::mousePressEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mousePressEventEP11TMouseEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[85]">TAbstractButton::mousePressEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mousePressEventEP11TMouseEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[85]">TAbstractButton::mousePressEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15mousePressEventEP11TMouseEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[83]">TAbstractButton::touchClickEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchClickEventEP11TTouchEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[83]">TAbstractButton::touchClickEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchClickEventEP11TTouchEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[83]">TAbstractButton::touchClickEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchClickEventEP11TTouchEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[83]">TAbstractButton::touchClickEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchClickEventEP11TTouchEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[81]">TAbstractButton::touchPressEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchPressEventEP11TTouchEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[81]">TAbstractButton::touchPressEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchPressEventEP11TTouchEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[81]">TAbstractButton::touchPressEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchPressEventEP11TTouchEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[81]">TAbstractButton::touchPressEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton15touchPressEventEP11TTouchEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[86]">TAbstractButton::mouseReleaseEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17mouseReleaseEventEP11TMouseEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[86]">TAbstractButton::mouseReleaseEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17mouseReleaseEventEP11TMouseEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[86]">TAbstractButton::mouseReleaseEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17mouseReleaseEventEP11TMouseEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[86]">TAbstractButton::mouseReleaseEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17mouseReleaseEventEP11TMouseEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[82]">TAbstractButton::touchReleaseEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17touchReleaseEventEP11TTouchEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[82]">TAbstractButton::touchReleaseEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17touchReleaseEventEP11TTouchEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[82]">TAbstractButton::touchReleaseEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17touchReleaseEventEP11TTouchEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[82]">TAbstractButton::touchReleaseEvent(TTouchEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton17touchReleaseEventEP11TTouchEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[87]">TAbstractButton::mouseDoubleClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton21mouseDoubleClickEventEP11TMouseEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[87]">TAbstractButton::mouseDoubleClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton21mouseDoubleClickEventEP11TMouseEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[87]">TAbstractButton::mouseDoubleClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton21mouseDoubleClickEventEP11TMouseEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[87]">TAbstractButton::mouseDoubleClickEvent(TMouseEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton21mouseDoubleClickEventEP11TMouseEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[91]">TAbstractButton::moveEvent(TMoveEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton9moveEventEP10TMoveEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[91]">TAbstractButton::moveEvent(TMoveEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton9moveEventEP10TMoveEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[91]">TAbstractButton::moveEvent(TMoveEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton9moveEventEP10TMoveEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[91]">TAbstractButton::moveEvent(TMoveEvent*)</a> from tabstractbutton.o(i._ZN15TAbstractButton9moveEventEP10TMoveEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[ae]">TAbstractButton::~TAbstractButton__deallocating()</a> from tabstractbutton.o(i._ZN15TAbstractButtonD0Ev) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[ad]">TAbstractButton::~TAbstractButton__sub_object()</a> from tguimain.o(i._ZN15TAbstractButtonD2Ev) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[c3]">TAbstractSlider::closeEvent(TCloseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10closeEventEP11TCloseEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[c3]">TAbstractSlider::closeEvent(TCloseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10closeEventEP11TCloseEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[be]">TAbstractSlider::enterEvent(TEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10enterEventEP6TEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[be]">TAbstractSlider::enterEvent(TEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10enterEventEP6TEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[bf]">TAbstractSlider::leaveEvent(TEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10leaveEventEP6TEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[bf]">TAbstractSlider::leaveEvent(TEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10leaveEventEP6TEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[c0]">TAbstractSlider::painTEvent(TPainTEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10painTEventEP11TPainTEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[c0]">TAbstractSlider::painTEvent(TPainTEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider10painTEventEP11TPainTEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[c2]">TAbstractSlider::resizeEvent(TResizeEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider11resizeEventEP12TResizeEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[c2]">TAbstractSlider::resizeEvent(TResizeEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider11resizeEventEP12TResizeEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[bc]">TAbstractSlider::focusInEvent(TFocusEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider12focusInEventEP11TFocusEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[bc]">TAbstractSlider::focusInEvent(TFocusEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider12focusInEventEP11TFocusEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[bd]">TAbstractSlider::focusOuTEvent(TFocusEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider13focusOuTEventEP11TFocusEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[bd]">TAbstractSlider::focusOuTEvent(TFocusEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider13focusOuTEventEP11TFocusEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[ba]">TAbstractSlider::keyPressEvent(TKeyEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider13keyPressEventEP9TKeyEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[ba]">TAbstractSlider::keyPressEvent(TKeyEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider13keyPressEventEP9TKeyEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b9]">TAbstractSlider::mouseMoveEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider14mouseMoveEventEP11TMouseEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b9]">TAbstractSlider::mouseMoveEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider14mouseMoveEventEP11TMouseEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b4]">TAbstractSlider::touchMoveEvent(TTouchEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider14touchMoveEventEP11TTouchEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[bb]">TAbstractSlider::keyReleaseEvent(TKeyEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15keyReleaseEventEP9TKeyEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[bb]">TAbstractSlider::keyReleaseEvent(TKeyEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15keyReleaseEventEP9TKeyEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b8]">TAbstractSlider::mouseClickEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15mouseClickEventEP11TMouseEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b8]">TAbstractSlider::mouseClickEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15mouseClickEventEP11TMouseEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b5]">TAbstractSlider::mousePressEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15mousePressEventEP11TMouseEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b5]">TAbstractSlider::mousePressEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15mousePressEventEP11TMouseEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b3]">TAbstractSlider::touchClickEvent(TTouchEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15touchClickEventEP11TTouchEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b3]">TAbstractSlider::touchClickEvent(TTouchEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15touchClickEventEP11TTouchEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b1]">TAbstractSlider::touchPressEvent(TTouchEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider15touchPressEventEP11TTouchEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b6]">TAbstractSlider::mouseReleaseEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider17mouseReleaseEventEP11TMouseEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b6]">TAbstractSlider::mouseReleaseEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider17mouseReleaseEventEP11TMouseEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b2]">TAbstractSlider::touchReleaseEvent(TTouchEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider17touchReleaseEventEP11TTouchEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b7]">TAbstractSlider::mouseDoubleClickEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider21mouseDoubleClickEventEP11TMouseEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[b7]">TAbstractSlider::mouseDoubleClickEvent(TMouseEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider21mouseDoubleClickEventEP11TMouseEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[c1]">TAbstractSlider::moveEvent(TMoveEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider9moveEventEP10TMoveEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[c1]">TAbstractSlider::moveEvent(TMoveEvent*)</a> from tabstractslider.o(i._ZN15TAbstractSlider9moveEventEP10TMoveEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[b0]">TAbstractSlider::~TAbstractSlider__deallocating()</a> from tabstractslider.o(i._ZN15TAbstractSliderD0Ev) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[af]">TAbstractSlider::~TAbstractSlider__sub_object()</a> from tabstractslider.o(i._ZN15TAbstractSliderD2Ev) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[72]">[local to arm_exceptions_c]::__default_terminate_handler()</a> from arm_exceptions_globs.o(.text) referenced from arm_exceptions_globs.o(.text)
 <LI><a href="#[c6]">User::show()</a> from user.o(i._ZN4User4showEv) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[c5]">User::~User__deallocating()</a> from user.o(i._ZN4UserD0Ev) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[c4]">User::~User()</a> from user.o(i._ZN4UserD1Ev) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[a3]">TList&lang;TConnection*&rang;::deleteItem(void*)</a> from tobject.o(t._ZN5TListIP11TConnectionE10deleteItemEPv) referenced from tobject.o(.constdata__ZTV12TConnectList)
 <LI><a href="#[a3]">TList&lang;TConnection*&rang;::deleteItem(void*)</a> from tobject.o(t._ZN5TListIP11TConnectionE10deleteItemEPv) referenced from tobject.o(.constdata__ZTV5TListIP11TConnectionE)
 <LI><a href="#[da]">TList&lang;TConnection*&rang;::clear()</a> from tobject.o(t._ZN5TListIP11TConnectionE5clearEv) referenced from tobject.o(.constdata__ZTV5TListIP11TConnectionE)
 <LI><a href="#[de]">TList&lang;TObject*&rang;::deleteItem(void*)</a> from tconnection.o(t._ZN5TListIP7TObjectE10deleteItemEPv) referenced from tconnection.o(.constdata__ZTV5TListIP7TObjectE)
 <LI><a href="#[de]">TList&lang;TObject*&rang;::deleteItem(void*)</a> from tconnection.o(t._ZN5TListIP7TObjectE10deleteItemEPv) referenced from tconnection.o(.constdata__ZTV8TObjList)
 <LI><a href="#[df]">TList&lang;TObject*&rang;::compareItems(TObject*, TObject*)</a> from tconnection.o(t._ZN5TListIP7TObjectE12compareItemsES1_S1_) referenced from tconnection.o(.constdata__ZTV5TListIP7TObjectE)
 <LI><a href="#[db]">TList&lang;TObject*&rang;::clear()</a> from tconnection.o(t._ZN5TListIP7TObjectE5clearEv) referenced from tconnection.o(.constdata__ZTV5TListIP7TObjectE)
 <LI><a href="#[dd]">TList&lang;TObject*&rang;::~TList__deallocating()</a> from tconnection.o(t._ZN5TListIP7TObjectED0Ev) referenced from tconnection.o(.constdata__ZTV5TListIP7TObjectE)
 <LI><a href="#[dc]">TList&lang;TObject*&rang;::~TList()</a> from tconnection.o(t._ZN5TListIP7TObjectED1Ev) referenced from tconnection.o(.constdata__ZTV5TListIP7TObjectE)
 <LI><a href="#[a0]">TList&lang;TWidget*&rang;::deleteItem(void*)</a> from twidget.o(t._ZN5TListIP7TWidgetE10deleteItemEPv) referenced from twidget.o(.constdata__ZTV11tWidgetList)
 <LI><a href="#[a0]">TList&lang;TWidget*&rang;::deleteItem(void*)</a> from twidget.o(t._ZN5TListIP7TWidgetE10deleteItemEPv) referenced from twidget.o(.constdata__ZTV5TListIP7TWidgetE)
 <LI><a href="#[a1]">TList&lang;TWidget*&rang;::compareItems(TWidget*, TWidget*)</a> from twidget.o(t._ZN5TListIP7TWidgetE12compareItemsES1_S1_) referenced from twidget.o(.constdata__ZTV11tWidgetList)
 <LI><a href="#[a1]">TList&lang;TWidget*&rang;::compareItems(TWidget*, TWidget*)</a> from twidget.o(t._ZN5TListIP7TWidgetE12compareItemsES1_S1_) referenced from twidget.o(.constdata__ZTV5TListIP7TWidgetE)
 <LI><a href="#[e0]">TList&lang;TWidget*&rang;::clear()</a> from twidget.o(t._ZN5TListIP7TWidgetE5clearEv) referenced from twidget.o(.constdata__ZTV5TListIP7TWidgetE)
 <LI><a href="#[e2]">TList&lang;TWidget*&rang;::~TList__deallocating()</a> from twidget.o(t._ZN5TListIP7TWidgetED0Ev) referenced from twidget.o(.constdata__ZTV5TListIP7TWidgetE)
 <LI><a href="#[e1]">TList&lang;TWidget*&rang;::~TList()</a> from twidget.o(t._ZN5TListIP7TWidgetED1Ev) referenced from twidget.o(.constdata__ZTV5TListIP7TWidgetE)
 <LI><a href="#[e5]">TArray::deleteData(TArray::array_data*)</a> from tarray.o(i._ZN6TArray10deleteDataEPNS_10array_dataE) referenced from tarray.o(.constdata__ZTV6TArray)
 <LI><a href="#[e5]">TArray::deleteData(TArray::array_data*)</a> from tarray.o(i._ZN6TArray10deleteDataEPNS_10array_dataE) referenced from tstring.o(.constdata__ZTV7TString)
 <LI><a href="#[e4]">TArray::newData()</a> from tarray.o(i._ZN6TArray7newDataEv) referenced from tarray.o(.constdata__ZTV6TArray)
 <LI><a href="#[e4]">TArray::newData()</a> from tarray.o(i._ZN6TArray7newDataEv) referenced from tstring.o(.constdata__ZTV7TString)
 <LI><a href="#[e3]">TArray::~TArray()</a> from tarray.o(i._ZN6TArrayD1Ev) referenced from tarray.o(.constdata__ZTV6TArray)
 <LI><a href="#[e7]">TEvent::~TEvent__deallocating()</a> from tapplication.o(i._ZN6TEventD0Ev) referenced from tapplication.o(.constdata__ZTV6TEvent)
 <LI><a href="#[e6]">TEvent::~TEvent()</a> from tapplication.o(i._ZN6TEventD1Ev) referenced from tapplication.o(.constdata__ZTV6TEvent)
 <LI><a href="#[fc]">TFrame::closeEvent(TCloseEvent*)</a> from tframe.o(i._ZN6TFrame10closeEventEP11TCloseEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[fc]">TFrame::closeEvent(TCloseEvent*)</a> from tframe.o(i._ZN6TFrame10closeEventEP11TCloseEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f7]">TFrame::enterEvent(TEvent*)</a> from tframe.o(i._ZN6TFrame10enterEventEP6TEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f7]">TFrame::enterEvent(TEvent*)</a> from tframe.o(i._ZN6TFrame10enterEventEP6TEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f8]">TFrame::leaveEvent(TEvent*)</a> from tframe.o(i._ZN6TFrame10leaveEventEP6TEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f8]">TFrame::leaveEvent(TEvent*)</a> from tframe.o(i._ZN6TFrame10leaveEventEP6TEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f9]">TFrame::painTEvent(TPainTEvent*)</a> from tframe.o(i._ZN6TFrame10painTEventEP11TPainTEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f9]">TFrame::painTEvent(TPainTEvent*)</a> from tframe.o(i._ZN6TFrame10painTEventEP11TPainTEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[fb]">TFrame::resizeEvent(TResizeEvent*)</a> from tframe.o(i._ZN6TFrame11resizeEventEP12TResizeEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[fb]">TFrame::resizeEvent(TResizeEvent*)</a> from tframe.o(i._ZN6TFrame11resizeEventEP12TResizeEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f5]">TFrame::focusInEvent(TFocusEvent*)</a> from tframe.o(i._ZN6TFrame12focusInEventEP11TFocusEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f5]">TFrame::focusInEvent(TFocusEvent*)</a> from tframe.o(i._ZN6TFrame12focusInEventEP11TFocusEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f6]">TFrame::focusOuTEvent(TFocusEvent*)</a> from tframe.o(i._ZN6TFrame13focusOuTEventEP11TFocusEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f6]">TFrame::focusOuTEvent(TFocusEvent*)</a> from tframe.o(i._ZN6TFrame13focusOuTEventEP11TFocusEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f3]">TFrame::keyPressEvent(TKeyEvent*)</a> from tframe.o(i._ZN6TFrame13keyPressEventEP9TKeyEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f3]">TFrame::keyPressEvent(TKeyEvent*)</a> from tframe.o(i._ZN6TFrame13keyPressEventEP9TKeyEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f2]">TFrame::mouseMoveEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame14mouseMoveEventEP11TMouseEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f2]">TFrame::mouseMoveEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame14mouseMoveEventEP11TMouseEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[ed]">TFrame::touchMoveEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame14touchMoveEventEP11TTouchEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[ed]">TFrame::touchMoveEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame14touchMoveEventEP11TTouchEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f4]">TFrame::keyReleaseEvent(TKeyEvent*)</a> from tframe.o(i._ZN6TFrame15keyReleaseEventEP9TKeyEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f4]">TFrame::keyReleaseEvent(TKeyEvent*)</a> from tframe.o(i._ZN6TFrame15keyReleaseEventEP9TKeyEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f1]">TFrame::mouseClickEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame15mouseClickEventEP11TMouseEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f1]">TFrame::mouseClickEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame15mouseClickEventEP11TMouseEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[ee]">TFrame::mousePressEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame15mousePressEventEP11TMouseEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[ee]">TFrame::mousePressEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame15mousePressEventEP11TMouseEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[ec]">TFrame::touchClickEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame15touchClickEventEP11TTouchEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[ec]">TFrame::touchClickEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame15touchClickEventEP11TTouchEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[ea]">TFrame::touchPressEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame15touchPressEventEP11TTouchEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[ea]">TFrame::touchPressEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame15touchPressEventEP11TTouchEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[ef]">TFrame::mouseReleaseEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame17mouseReleaseEventEP11TMouseEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[ef]">TFrame::mouseReleaseEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame17mouseReleaseEventEP11TMouseEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[eb]">TFrame::touchReleaseEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame17touchReleaseEventEP11TTouchEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[eb]">TFrame::touchReleaseEvent(TTouchEvent*)</a> from tframe.o(i._ZN6TFrame17touchReleaseEventEP11TTouchEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[f0]">TFrame::mouseDoubleClickEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame21mouseDoubleClickEventEP11TMouseEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[f0]">TFrame::mouseDoubleClickEvent(TMouseEvent*)</a> from tframe.o(i._ZN6TFrame21mouseDoubleClickEventEP11TMouseEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[fa]">TFrame::moveEvent(TMoveEvent*)</a> from tframe.o(i._ZN6TFrame9moveEventEP10TMoveEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[fa]">TFrame::moveEvent(TMoveEvent*)</a> from tframe.o(i._ZN6TFrame9moveEventEP10TMoveEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[e9]">TFrame::~TFrame__deallocating()</a> from tframe.o(i._ZN6TFrameD0Ev) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[e8]">TFrame::~TFrame__sub_object()</a> from tframe.o(i._ZN6TFrameD2Ev) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[7c]">TLabel::slot_showValue(long, long)</a> from tlabel.o(i._ZN6TLabel14slot_showValueEll) referenced from tguimain.o(.constdata)
 <LI><a href="#[ff]">TLabel::show()</a> from tlabel.o(i._ZN6TLabel4showEv) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[fe]">TLabel::~TLabel__deallocating()</a> from tlabel.o(i._ZN6TLabelD0Ev) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[fd]">TLabel::~TLabel()</a> from tguimain.o(i._ZN6TLabelD1Ev) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[115]">TDialog::closeEvent(TCloseEvent*)</a> from tdialog.o(i._ZN7TDialog10closeEventEP11TCloseEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[110]">TDialog::enterEvent(TEvent*)</a> from tdialog.o(i._ZN7TDialog10enterEventEP6TEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[111]">TDialog::leaveEvent(TEvent*)</a> from tdialog.o(i._ZN7TDialog10leaveEventEP6TEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[112]">TDialog::painTEvent(TPainTEvent*)</a> from tdialog.o(i._ZN7TDialog10painTEventEP11TPainTEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[114]">TDialog::resizeEvent(TResizeEvent*)</a> from tdialog.o(i._ZN7TDialog11resizeEventEP12TResizeEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[10e]">TDialog::focusInEvent(TFocusEvent*)</a> from tdialog.o(i._ZN7TDialog12focusInEventEP11TFocusEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[10f]">TDialog::focusOuTEvent(TFocusEvent*)</a> from tdialog.o(i._ZN7TDialog13focusOuTEventEP11TFocusEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[10c]">TDialog::keyPressEvent(TKeyEvent*)</a> from tdialog.o(i._ZN7TDialog13keyPressEventEP9TKeyEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[10b]">TDialog::mouseMoveEvent(TMouseEvent*)</a> from tdialog.o(i._ZN7TDialog14mouseMoveEventEP11TMouseEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[106]">TDialog::touchMoveEvent(TTouchEvent*)</a> from tdialog.o(i._ZN7TDialog14touchMoveEventEP11TTouchEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[10d]">TDialog::keyReleaseEvent(TKeyEvent*)</a> from tdialog.o(i._ZN7TDialog15keyReleaseEventEP9TKeyEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[10a]">TDialog::mouseClickEvent(TMouseEvent*)</a> from tdialog.o(i._ZN7TDialog15mouseClickEventEP11TMouseEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[107]">TDialog::mousePressEvent(TMouseEvent*)</a> from tdialog.o(i._ZN7TDialog15mousePressEventEP11TMouseEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[105]">TDialog::touchClickEvent(TTouchEvent*)</a> from tdialog.o(i._ZN7TDialog15touchClickEventEP11TTouchEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[103]">TDialog::touchPressEvent(TTouchEvent*)</a> from tdialog.o(i._ZN7TDialog15touchPressEventEP11TTouchEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[108]">TDialog::mouseReleaseEvent(TMouseEvent*)</a> from tdialog.o(i._ZN7TDialog17mouseReleaseEventEP11TMouseEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[104]">TDialog::touchReleaseEvent(TTouchEvent*)</a> from tdialog.o(i._ZN7TDialog17touchReleaseEventEP11TTouchEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[109]">TDialog::mouseDoubleClickEvent(TMouseEvent*)</a> from tdialog.o(i._ZN7TDialog21mouseDoubleClickEventEP11TMouseEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[102]">TDialog::show()</a> from tdialog.o(i._ZN7TDialog4showEv) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[113]">TDialog::moveEvent(TMoveEvent*)</a> from tdialog.o(i._ZN7TDialog9moveEventEP10TMoveEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[101]">TDialog::~TDialog__deallocating()</a> from tdialog.o(i._ZN7TDialogD0Ev) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[100]">TDialog::~TDialog()</a> from tdialog.o(i._ZN7TDialogD1Ev) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[118]">TDirver::obtainData()</a> from tguimain.o(i._ZN7TDirver10obtainDataEv) referenced from tguimain.o(.constdata__ZTV7TDirver)
 <LI><a href="#[117]">TDirver::dataBack()</a> from tguimain.o(i._ZN7TDirver8dataBackEv) referenced from tguimain.o(.constdata__ZTV7TDirver)
 <LI><a href="#[116]">TDirver::dataFront()</a> from tguimain.o(i._ZN7TDirver9dataFrontEv) referenced from tguimain.o(.constdata__ZTV7TDirver)
 <LI><a href="#[11a]">TObject::~TObject__deallocating()</a> from tobject.o(i._ZN7TObjectD0Ev) referenced from tobject.o(.constdata__ZTV7TObject)
 <LI><a href="#[119]">TObject::~TObject__sub_object()</a> from tobject.o(i._ZN7TObjectD2Ev) referenced from tobject.o(.constdata__ZTV7TObject)
 <LI><a href="#[122]">TSlider::sig_depress(long, long)</a> from tslider.o(i._ZN7TSlider11sig_depressEll) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[123]">TSlider::sig_release(long, long)</a> from tslider.o(i._ZN7TSlider11sig_releaseEll) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[120]">TSlider::touchMoveEvent(TTouchEvent*)</a> from tslider.o(i._ZN7TSlider14touchMoveEventEP11TTouchEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[125]">TSlider::sig_valueChange(long, long)</a> from tslider.o(i._ZN7TSlider15sig_valueChangeEll) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[11e]">TSlider::touchPressEvent(TTouchEvent*)</a> from tslider.o(i._ZN7TSlider15touchPressEventEP11TTouchEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[11f]">TSlider::touchReleaseEvent(TTouchEvent*)</a> from tslider.o(i._ZN7TSlider17touchReleaseEventEP11TTouchEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[11d]">TSlider::show()</a> from tslider.o(i._ZN7TSlider4showEv) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[124]">TSlider::release()</a> from tslider.o(i._ZN7TSlider7releaseEv) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[121]">TSlider::sig_move(long, long)</a> from tslider.o(i._ZN7TSlider8sig_moveEll) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[11c]">TSlider::~TSlider__deallocating()</a> from tslider.o(i._ZN7TSliderD0Ev) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[11b]">TSlider::~TSlider()</a> from tguimain.o(i._ZN7TSliderD1Ev) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[127]">TString::~TString__deallocating()</a> from tstring.o(i._ZN7TStringD0Ev) referenced from tstring.o(.constdata__ZTV7TString)
 <LI><a href="#[126]">TString::~TString()</a> from tstring.o(i._ZN7TStringD1Ev) referenced from tstring.o(.constdata__ZTV7TString)
 <LI><a href="#[d9]">TWidget::closeEvent(TCloseEvent*)</a> from user.o(i._ZN7TWidget10closeEventEP11TCloseEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d9]">TWidget::closeEvent(TCloseEvent*)</a> from user.o(i._ZN7TWidget10closeEventEP11TCloseEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d4]">TWidget::enterEvent(TEvent*)</a> from user.o(i._ZN7TWidget10enterEventEP6TEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d4]">TWidget::enterEvent(TEvent*)</a> from user.o(i._ZN7TWidget10enterEventEP6TEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d5]">TWidget::leaveEvent(TEvent*)</a> from user.o(i._ZN7TWidget10leaveEventEP6TEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d5]">TWidget::leaveEvent(TEvent*)</a> from user.o(i._ZN7TWidget10leaveEventEP6TEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d6]">TWidget::painTEvent(TPainTEvent*)</a> from user.o(i._ZN7TWidget10painTEventEP11TPainTEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d6]">TWidget::painTEvent(TPainTEvent*)</a> from user.o(i._ZN7TWidget10painTEventEP11TPainTEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tpushbutton.o(.constdata__ZTV11TPushButton)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tradiobutton.o(.constdata__ZTV12TRadioButton)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tlabel.o(.constdata__ZTV6TLabel)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tdialog.o(.constdata__ZTV7TDialog)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tslider.o(.constdata__ZTV7TSlider)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[7f]">TWidget::eventFilter(TEvent*)</a> from twidget.o(i._ZN7TWidget11eventFilterEP6TEvent) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[d8]">TWidget::resizeEvent(TResizeEvent*)</a> from user.o(i._ZN7TWidget11resizeEventEP12TResizeEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d8]">TWidget::resizeEvent(TResizeEvent*)</a> from user.o(i._ZN7TWidget11resizeEventEP12TResizeEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d2]">TWidget::focusInEvent(TFocusEvent*)</a> from user.o(i._ZN7TWidget12focusInEventEP11TFocusEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d2]">TWidget::focusInEvent(TFocusEvent*)</a> from user.o(i._ZN7TWidget12focusInEventEP11TFocusEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d3]">TWidget::focusOuTEvent(TFocusEvent*)</a> from user.o(i._ZN7TWidget13focusOuTEventEP11TFocusEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d3]">TWidget::focusOuTEvent(TFocusEvent*)</a> from user.o(i._ZN7TWidget13focusOuTEventEP11TFocusEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d0]">TWidget::keyPressEvent(TKeyEvent*)</a> from user.o(i._ZN7TWidget13keyPressEventEP9TKeyEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d0]">TWidget::keyPressEvent(TKeyEvent*)</a> from user.o(i._ZN7TWidget13keyPressEventEP9TKeyEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[cf]">TWidget::mouseMoveEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget14mouseMoveEventEP11TMouseEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[cf]">TWidget::mouseMoveEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget14mouseMoveEventEP11TMouseEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[ca]">TWidget::touchMoveEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget14touchMoveEventEP11TTouchEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[ca]">TWidget::touchMoveEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget14touchMoveEventEP11TTouchEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d1]">TWidget::keyReleaseEvent(TKeyEvent*)</a> from user.o(i._ZN7TWidget15keyReleaseEventEP9TKeyEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d1]">TWidget::keyReleaseEvent(TKeyEvent*)</a> from user.o(i._ZN7TWidget15keyReleaseEventEP9TKeyEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[ce]">TWidget::mouseClickEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget15mouseClickEventEP11TMouseEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[ce]">TWidget::mouseClickEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget15mouseClickEventEP11TMouseEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[cb]">TWidget::mousePressEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget15mousePressEventEP11TMouseEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[cb]">TWidget::mousePressEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget15mousePressEventEP11TMouseEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[c9]">TWidget::touchClickEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget15touchClickEventEP11TTouchEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[c9]">TWidget::touchClickEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget15touchClickEventEP11TTouchEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[c7]">TWidget::touchPressEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget15touchPressEventEP11TTouchEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[c7]">TWidget::touchPressEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget15touchPressEventEP11TTouchEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[cc]">TWidget::mouseReleaseEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget17mouseReleaseEventEP11TMouseEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[cc]">TWidget::mouseReleaseEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget17mouseReleaseEventEP11TMouseEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[c8]">TWidget::touchReleaseEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget17touchReleaseEventEP11TTouchEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[c8]">TWidget::touchReleaseEvent(TTouchEvent*)</a> from user.o(i._ZN7TWidget17touchReleaseEventEP11TTouchEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[cd]">TWidget::mouseDoubleClickEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget21mouseDoubleClickEventEP11TMouseEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[cd]">TWidget::mouseDoubleClickEvent(TMouseEvent*)</a> from user.o(i._ZN7TWidget21mouseDoubleClickEventEP11TMouseEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[d7]">TWidget::moveEvent(TMoveEvent*)</a> from user.o(i._ZN7TWidget9moveEventEP10TMoveEvent) referenced from user.o(.constdata__ZTV4User)
 <LI><a href="#[d7]">TWidget::moveEvent(TMoveEvent*)</a> from user.o(i._ZN7TWidget9moveEventEP10TMoveEvent) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[129]">TWidget::~TWidget__deallocating()</a> from twidget.o(i._ZN7TWidgetD0Ev) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[128]">TWidget::~TWidget__sub_object()</a> from twidget.o(i._ZN7TWidgetD2Ev) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[12c]">TObjList::compareItems(TObject*, TObject*)</a> from tconnection.o(i._ZN8TObjList12compareItemsEP7TObjectS1_) referenced from tconnection.o(.constdata__ZTV8TObjList)
 <LI><a href="#[12b]">TObjList::~TObjList__deallocating()</a> from tconnection.o(i._ZN8TObjListD0Ev) referenced from tconnection.o(.constdata__ZTV8TObjList)
 <LI><a href="#[12a]">TObjList::~TObjList()</a> from tconnection.o(i._ZN8TObjListD1Ev) referenced from tconnection.o(.constdata__ZTV8TObjList)
 <LI><a href="#[130]">TCheckBox::sig_depress(long, long)</a> from tcheckbox.o(i._ZN9TCheckBox11sig_depressEll) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[131]">TCheckBox::sig_release(long, long)</a> from tcheckbox.o(i._ZN9TCheckBox11sig_releaseEll) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[12f]">TCheckBox::show()</a> from tcheckbox.o(i._ZN9TCheckBox4showEv) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[132]">TCheckBox::release()</a> from tcheckbox.o(i._ZN9TCheckBox7releaseEv) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[12e]">TCheckBox::~TCheckBox__deallocating()</a> from tcheckbox.o(i._ZN9TCheckBoxD0Ev) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[12d]">TCheckBox::~TCheckBox()</a> from tcheckbox.o(i._ZN9TCheckBoxD1Ev) referenced from tcheckbox.o(.constdata__ZTV9TCheckBox)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from tobject.o(.constdata__ZTV11tCollectionIP11TConnectionE)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from tconnection.o(.constdata__ZTV11tCollectionIP7TObjectE)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from twidget.o(.constdata__ZTV11tCollectionIP7TWidgetE)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from tabstractbutton.o(.constdata__ZTV15TAbstractButton)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 5 times from tabstractslider.o(.constdata__ZTV15TAbstractSlider)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from tframe.o(.constdata__ZTV6TFrame)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from tobject.o(.constdata__ZTV7TObject)
 <LI><a href="#[99]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from twidget.o(.constdata__ZTV7TWidget)
 <LI><a href="#[71]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[74]">fputc</a> from usart_conf.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[6e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[7a]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[79]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[7b]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[71]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[2a7]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[133]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[141]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2a8]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[2a9]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[2aa]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2ab]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[2ac]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[f]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[29d]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[29c]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[11]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[295]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[9]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2ad]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::duplicate(const char*, unsigned long)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::store(const char*, unsigned long)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>

<P><STRONG><a name="[21c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::TBuffer(unsigned long*, unsigned long, unsigned long, unsigned long)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
</UL>

<P><STRONG><a name="[2ae]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[2af]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2b1]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b2]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[160]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::addChild(TObject*)
</UL>

<P><STRONG><a name="[2b3]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[241]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::TString(const char*)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::setStr(const char*)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::setNum(unsigned long)
</UL>

<P><STRONG><a name="[73]"></a>__default_new_handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_newhandler_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __default_new_handler() &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> new.o(i._Znwj)
</UL>
<P><STRONG><a name="[13a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[13c]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[2b4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>__rt_new_handler_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[13e]"></a>__rt_eh_globals_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cpp_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[260]"></a>__rt_SIGPVFN</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_signal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[139]"></a>std::terminate()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arm_exceptions_terminate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
</UL>

<P><STRONG><a name="[13d]"></a>__cxa_get_globals</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[134]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2b5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[2b6]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __ARM_exceptions_buffer_init &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[2b7]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)

<P><STRONG><a name="[2b8]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)

<P><STRONG><a name="[2b9]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2ba]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[142]"></a>DMA2D_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_dma2d.o(i.DMA2D_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2D_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dma2d_memset
</UL>

<P><STRONG><a name="[17d]"></a>DMA2D_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma2d.o(i.DMA2D_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dma2d_memset
</UL>

<P><STRONG><a name="[17b]"></a>DMA2D_Init</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, stm32f4xx_dma2d.o(i.DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA2D_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dma2d_memset
</UL>

<P><STRONG><a name="[17c]"></a>DMA2D_StartTransfer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma2d.o(i.DMA2D_StartTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dma2d_memset
</UL>

<P><STRONG><a name="[10]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[159]"></a>Delay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, delay_conf.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1_led(void*)
</UL>

<P><STRONG><a name="[3b]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EXTI15_10_IRQHandler &rArr; GTP_TouchProcess &rArr; Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GREEN_Toggle
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_TouchProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[147]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[144]"></a>EXTI_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[164]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GTP_IRQEnable
</UL>

<P><STRONG><a name="[148]"></a>FLASHConfig</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, flash_conf.o(i.FLASHConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FLASHConfig &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[198]"></a>FMC_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_fmc.o(i.FMC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[199]"></a>FMC_SDRAMCmdConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMCmdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[196]"></a>FMC_SDRAMInit</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMConfig
</UL>

<P><STRONG><a name="[19b]"></a>FMC_SetRefreshCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SetRefreshCount))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[14c]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASHConfig
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_RED_Config
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GREEN_Config
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_BLUE_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GTP_IRQEnable
</UL>

<P><STRONG><a name="[14b]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASHConfig
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
</UL>

<P><STRONG><a name="[175]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
</UL>

<P><STRONG><a name="[177]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
</UL>

<P><STRONG><a name="[191]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ToggleBits))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GREEN_Toggle
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_RED_Toggle
</UL>

<P><STRONG><a name="[18f]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_RED_Config
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GREEN_Config
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_BLUE_Config
</UL>

<P><STRONG><a name="[155]"></a>GTP_Init_Panel</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, gt9xx.o(i.GTP_Init_Panel))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GTP_Init_Panel &rArr; GTP_Read_Version &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GTP_IRQEnable
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[157]"></a>GTP_Read_Version</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, gt9xx.o(i.GTP_Read_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GTP_Read_Version &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[146]"></a>GTP_TouchProcess</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gt9xx.o(i.GTP_TouchProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GTP_TouchProcess &rArr; Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[b]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[16b]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Mode_Config
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[170]"></a>I2C_CheckEvent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f4xx_i2c.o(i.I2C_CheckEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[16a]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Mode_Config
</UL>

<P><STRONG><a name="[15a]"></a>I2C_GTP_IRQEnable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, touch_i2c.o(i.I2C_GTP_IRQEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2C_GTP_IRQEnable &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[16f]"></a>I2C_GenerateSTART</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[172]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[16e]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32f4xx_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[167]"></a>I2C_Init</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, stm32f4xx_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Mode_Config
</UL>

<P><STRONG><a name="[16c]"></a>I2C_ReadBytes</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, touch_i2c.o(i.I2C_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_ReadBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>

<P><STRONG><a name="[173]"></a>I2C_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[174]"></a>I2C_ResetChip</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, touch_i2c.o(i.I2C_ResetChip))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C_ResetChip &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[171]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[179]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
</UL>

<P><STRONG><a name="[156]"></a>I2C_Touch_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, touch_i2c.o(i.I2C_Touch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = I2C_Touch_Init &rArr; I2C_Mode_Config &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Mode_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GTP_IRQEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[178]"></a>I2C_WriteBytes</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, touch_i2c.o(i.I2C_WriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>

<P><STRONG><a name="[17a]"></a>LCD_Clear</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, lcd_conf.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_Clear &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[17f]"></a>LCD_Init</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, lcd_conf.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = LCD_Init &rArr; SDRAMConfig &rArr; SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMConfig
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAIConfig
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAICmd
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LTDCCLKDivConfig
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[186]"></a>LCD_LayerInit</STRONG> (Thumb, 142 bytes, Stack size 72 bytes, lcd_conf.o(i.LCD_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_LayerInit &rArr; LTDC_LayerInit
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerInit
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[18c]"></a>LCD_SetFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_conf.o(i.LCD_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[187]"></a>LCD_SetLayer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd_conf.o(i.LCD_SetLayer))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[188]"></a>LCD_SetTransparency</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lcd_conf.o(i.LCD_SetTransparency))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetTransparency
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[18e]"></a>LED_BLUE_Config</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, led_conf.o(i.LED_BLUE_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_BLUE_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[190]"></a>LED_GREEN_Config</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, led_conf.o(i.LED_GREEN_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_GREEN_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[145]"></a>LED_GREEN_Toggle</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, led_conf.o(i.LED_GREEN_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_GREEN_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[192]"></a>LED_RED_Config</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, led_conf.o(i.LED_RED_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_RED_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[193]"></a>LED_RED_Toggle</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, led_conf.o(i.LED_RED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_RED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1_led(void*)
</UL>

<P><STRONG><a name="[185]"></a>LTDC_Cmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[184]"></a>LTDC_Init</STRONG> (Thumb, 378 bytes, Stack size 20 bytes, stm32f4xx_ltdc.o(i.LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[18d]"></a>LTDC_LayerAlpha</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerAlpha))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
</UL>

<P><STRONG><a name="[18b]"></a>LTDC_LayerCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[189]"></a>LTDC_LayerInit</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_LayerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[18a]"></a>LTDC_ReloadConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_ReloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[c]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[166]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_NVIC_Config
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_NVICConfig
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GTP_IRQEnable
</UL>

<P><STRONG><a name="[165]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_NVIC_Config
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_NVICConfig
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GTP_IRQEnable
</UL>

<P><STRONG><a name="[149]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASHConfig
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_RED_Config
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GREEN_Config
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_BLUE_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
</UL>

<P><STRONG><a name="[143]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>

<P><STRONG><a name="[195]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMConfig
</UL>

<P><STRONG><a name="[162]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
</UL>

<P><STRONG><a name="[14a]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASHConfig
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
</UL>

<P><STRONG><a name="[168]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[183]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[181]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LTDCCLKDivConfig))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[182]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAICmd))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[180]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLSAIConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[70]"></a>SDRAMConfig</STRONG> (Thumb, 100 bytes, Stack size 80 bytes, sdram_conf.o(i.SDRAMConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SDRAMConfig &rArr; SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMInit
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[14e]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASHConfig
</UL>

<P><STRONG><a name="[14d]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASHConfig
</UL>

<P><STRONG><a name="[163]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GTP_IRQEnable
</UL>

<P><STRONG><a name="[12]"></a>SysTick_Handler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1a0]"></a>TIM_Basic_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tim_conf.o(i.TIM_Basic_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_Basic_Config &rArr; TIMx_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_NVIC_Config
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a4]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[19f]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1a6]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[19e]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1a5]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[1a3]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Mode_Config
</UL>

<P><STRONG><a name="[1a7]"></a>USART1Config</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, usart_conf.o(i.USART1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART1Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_NVICConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1aa]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
</UL>

<P><STRONG><a name="[265]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[1ab]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
</UL>

<P><STRONG><a name="[1a8]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
</UL>

<P><STRONG><a name="[264]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[e]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1ac]"></a>TGuiRun()</STRONG> (Thumb, 668 bytes, Stack size 896 bytes, tguimain.o(i._Z7TGuiRunv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = TGuiRun() &rArr; TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool) &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::~TDialog()
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::TLabel(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::User(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::addNextRadio(TRadioButton*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::~TApplication()
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::TApplication(TWidget*, TDirver*)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::show()
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::run()
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::~TSlider()
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::~TLabel()
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::~TAbstractButton__sub_object()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::~TRadioButton()
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::~TPushButton()
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2_tgui(void*)
</UL>

<P><STRONG><a name="[1ba]"></a>TBufPainter::drawButton(long, long, long, long, const char*, bool)</STRONG> (Thumb, 140 bytes, Stack size 64 bytes, tbufpainter.o(i._ZN11TBufPainter10drawButtonEllllPKcb))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
</UL>

<P><STRONG><a name="[1bd]"></a>TBufPainter::drawCircle(long, long, long)</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, tbufpainter.o(i._ZN11TBufPainter10drawCircleElll))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = TBufPainter::drawCircle(long, long, long) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawPoint(long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullCircle(long, long, long)
</UL>

<P><STRONG><a name="[1bf]"></a>TBufPainter::drawDialog(long, long, long, long, const char*, bool, unsigned long)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, tbufpainter.o(i._ZN11TBufPainter10drawDialogEllllPKcbm))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = TBufPainter::drawDialog(long, long, long, long, const char*, bool, unsigned long) &rArr; TBufPainter::drawDialogTitle(long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialogTitle(long, long, long, const char*, bool)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
</UL>

<P><STRONG><a name="[1c1]"></a>TBufPainter::drawEnText(long, long, const char*, long, bool)</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, tbufpainter.o(i._ZN11TBufPainter10drawEnTextEllPKclb))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::displayEnChar(long, long, unsigned char, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)
</UL>

<P><STRONG><a name="[1c3]"></a>TBufPainter::drawFullRect(long, long, long, long)</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, tbufpainter.o(i._ZN11TBufPainter12drawFullRectEllll))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TBufPainter::drawFullRect(long, long, long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::paintMeta(TRect*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::User(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialogTitle(long, long, long, const char*, bool)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>

<P><STRONG><a name="[1c7]"></a>TBufPainter::setTextColor(unsigned long)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tbufpainter.o(i._ZN11TBufPainter12setTextColorEm))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialogTitle(long, long, long, const char*, bool)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawChar(long, long, const unsigned short*, bool)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>

<P><STRONG><a name="[1c2]"></a>TBufPainter::displayEnChar(long, long, unsigned char, bool)</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, tbufpainter.o(i._ZN11TBufPainter13displayEnCharEllhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawChar(long, long, const unsigned short*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawEnText(long, long, const char*, long, bool)
</UL>

<P><STRONG><a name="[1bb]"></a>TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, tbufpainter.o(i._ZN11TBufPainter13drawWinShadesEllllmmmmmb))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool) &rArr; TBufPainter::drawLine(long, long, long, long) &rArr; TBufPainter::drawVLine(long, long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLine(long, long, long, long)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setTextColor(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialog(long, long, long, long, const char*, bool, unsigned long)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
</UL>

<P><STRONG><a name="[1c9]"></a>TBufPainter::drawFullCircle(long, long, long)</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, tbufpainter.o(i._ZN11TBufPainter14drawFullCircleElll))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = TBufPainter::drawFullCircle(long, long, long) &rArr; TBufPainter::drawCircle(long, long, long) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVLine(long, long, long)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCircle(long, long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)
</UL>

<P><STRONG><a name="[1cb]"></a>TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)</STRONG> (Thumb, 450 bytes, Stack size 96 bytes, tbufpainter.o(i._ZN11TBufPainter14drawVertSliderEllllllbm))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setColors(unsigned long, unsigned long)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLine(long, long, long, long)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
</UL>

<P><STRONG><a name="[1c0]"></a>TBufPainter::drawDialogTitle(long, long, long, const char*, bool)</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, tbufpainter.o(i._ZN11TBufPainter15drawDialogTitleElllPKcb))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = TBufPainter::drawDialogTitle(long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setTextColor(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialog(long, long, long, long, const char*, bool, unsigned long)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[1cd]"></a>TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)</STRONG> (Thumb, 452 bytes, Stack size 104 bytes, tbufpainter.o(i._ZN11TBufPainter15drawHorizSliderEllllllbm))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setColors(unsigned long, unsigned long)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLine(long, long, long, long)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
</UL>

<P><STRONG><a name="[1bc]"></a>TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, tbufpainter.o(i._ZN11TBufPainter16drawCenterEnTextEllllPKcmmbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setTextColor(unsigned long)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawEnText(long, long, const char*, long, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialogTitle(long, long, long, const char*, bool)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long)
</UL>

<P><STRONG><a name="[1c6]"></a>TBufPainter::drawChar(long, long, const unsigned short*, bool)</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, tbufpainter.o(i._ZN11TBufPainter8drawCharEllPKtb))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawPoint(long, long)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setTextColor(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::displayEnChar(long, long, unsigned char, bool)
</UL>

<P><STRONG><a name="[1c8]"></a>TBufPainter::drawLine(long, long, long, long)</STRONG> (Thumb, 338 bytes, Stack size 88 bytes, tbufpainter.o(i._ZN11TBufPainter8drawLineEllll))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TBufPainter::drawLine(long, long, long, long) &rArr; TBufPainter::drawVLine(long, long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVLine(long, long, long)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawPoint(long, long)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHLine(long, long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>

<P><STRONG><a name="[1cf]"></a>TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)</STRONG> (Thumb, 216 bytes, Stack size 80 bytes, tbufpainter.o(i._ZN11TBufPainter9drawCheckEllllPKcbbm))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setColors(unsigned long, unsigned long)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLine(long, long, long, long)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawWinShades(long, long, long, long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
</UL>

<P><STRONG><a name="[1ce]"></a>TBufPainter::drawHLine(long, long, long)</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, tbufpainter.o(i._ZN11TBufPainter9drawHLineElll))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = TBufPainter::drawHLine(long, long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::paintMeta(TRect*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLine(long, long, long, long)
</UL>

<P><STRONG><a name="[1d0]"></a>TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long)</STRONG> (Thumb, 74 bytes, Stack size 64 bytes, tbufpainter.o(i._ZN11TBufPainter9drawLabelEllllPKcmm))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setTextColor(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::TLabel(long, long, long, long, const char*, TWidget*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::show()
</UL>

<P><STRONG><a name="[1be]"></a>TBufPainter::drawPoint(long, long)</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, tbufpainter.o(i._ZN11TBufPainter9drawPointEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::paintMeta(TRect*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLine(long, long, long, long)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawChar(long, long, const unsigned short*, bool)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCircle(long, long, long)
</UL>

<P><STRONG><a name="[1d1]"></a>TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)</STRONG> (Thumb, 308 bytes, Stack size 72 bytes, tbufpainter.o(i._ZN11TBufPainter9drawRadioEllllPKcbbm))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setColors(unsigned long, unsigned long)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullCircle(long, long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
</UL>

<P><STRONG><a name="[1ca]"></a>TBufPainter::drawVLine(long, long, long)</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, tbufpainter.o(i._ZN11TBufPainter9drawVLineElll))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = TBufPainter::drawVLine(long, long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::paintMeta(TRect*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLine(long, long, long, long)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullCircle(long, long, long)
</UL>

<P><STRONG><a name="[1c5]"></a>TBufPainter::paintMeta(TRect*)</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, tbufpainter.o(i._ZN11TBufPainter9paintMetaEP5TRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dma2d_memset
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::width() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVLine(long, long, long)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawPoint(long, long)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHLine(long, long, long)
</UL>

<P><STRONG><a name="[1cc]"></a>TBufPainter::setColors(unsigned long, unsigned long)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tbufpainter.o(i._ZN11TBufPainter9setColorsEmm))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::User(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)
</UL>

<P><STRONG><a name="[1e0]"></a>TBufPainter::TBufPainter(unsigned long*, TRect*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tbufpainter.o(i._ZN11TBufPainterC1EPmP5TRect))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::TLabel(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::User(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::show()
</UL>

<P><STRONG><a name="[2bb]"></a>TBufPainter::TBufPainter__sub_object(unsigned long*, TRect*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, tbufpainter.o(i._ZN11TBufPainterC1EPmP5TRect), UNUSED)

<P><STRONG><a name="[1d4]"></a>TConnection::active(long, long)</STRONG> (Thumb, 194 bytes, Stack size 104 bytes, tconnection.o(i._ZN11TConnection6activeEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TConnection::active(long, long) &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFuncList::locate(unsigned long)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::locate(unsigned long)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
</UL>

<P><STRONG><a name="[1d7]"></a>TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, tconnection.o(i._ZN11TConnectionC1EM7TObjectFviiEPS0_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int)) &rArr; TFuncList::append(void(TObject::*)(int, int)) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFuncList::TFuncList()
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFuncList::append(void(TObject::*)(int, int))
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::append(TObject*)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::TObjList()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[2bc]"></a>TConnection::TConnection__sub_object(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, tconnection.o(i._ZN11TConnectionC1EM7TObjectFviiEPS0_S2_), UNUSED)

<P><STRONG><a name="[94]"></a>TPushButton::sig_depress(long, long)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, tpushbutton.o(i._ZN11TPushButton11sig_depressEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = TPushButton::sig_depress(long, long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tpushbutton.o(.constdata__ZTV11TPushButton)
</UL>
<P><STRONG><a name="[95]"></a>TPushButton::sig_release(long, long)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, tpushbutton.o(i._ZN11TPushButton11sig_releaseEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = TPushButton::sig_release(long, long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tpushbutton.o(.constdata__ZTV11TPushButton)
</UL>
<P><STRONG><a name="[80]"></a>TPushButton::show()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tpushbutton.o(i._ZN11TPushButton4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TPushButton::show() &rArr; TWidget::refresh() &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tpushbutton.o(.constdata__ZTV11TPushButton)
</UL>
<P><STRONG><a name="[96]"></a>TPushButton::release()</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, tpushbutton.o(i._ZN11TPushButton7releaseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = TPushButton::release() &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tpushbutton.o(.constdata__ZTV11TPushButton)
</UL>
<P><STRONG><a name="[1af]"></a>TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, tpushbutton.o(i._ZN11TPushButtonC1EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = TPushButton::TPushButton(long, long, long, long, const char*, TWidget*) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::TAbstractButton__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawButton(long, long, long, long, const char*, bool)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2bd]"></a>TPushButton::TPushButton__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, tpushbutton.o(i._ZN11TPushButtonC1EllllPKcP7TWidget), UNUSED)

<P><STRONG><a name="[7e]"></a>TPushButton::~TPushButton__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tpushbutton.o(i._ZN11TPushButtonD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TPushButton::~TPushButton__deallocating() &rArr; TPushButton::~TPushButton() &rArr; TAbstractButton::~TAbstractButton__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::~TPushButton()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tpushbutton.o(.constdata__ZTV11TPushButton)
</UL>
<P><STRONG><a name="[7d]"></a>TPushButton::~TPushButton()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tguimain.o(i._ZN11TPushButtonD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TPushButton::~TPushButton() &rArr; TAbstractButton::~TAbstractButton__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::~TAbstractButton__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::~TPushButton__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tpushbutton.o(.constdata__ZTV11TPushButton)
</UL>
<P><STRONG><a name="[2be]"></a>TPushButton::~TPushButton__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tguimain.o(i._ZN11TPushButtonD1Ev), UNUSED)

<P><STRONG><a name="[98]"></a>TTouchEvent::~TTouchEvent__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tapplication.o(i._ZN11TTouchEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TTouchEvent::~TTouchEvent__deallocating() &rArr; TTouchEvent::~TTouchEvent() &rArr; TEvent::~TEvent() &rArr; TEvent::peErrMsg() &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::~TTouchEvent()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tapplication.o(.constdata__ZTV11TTouchEvent)
</UL>
<P><STRONG><a name="[97]"></a>TTouchEvent::~TTouchEvent()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tapplication.o(i._ZN11TTouchEventD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TTouchEvent::~TTouchEvent() &rArr; TEvent::~TEvent() &rArr; TEvent::peErrMsg() &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEvent::~TEvent()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::~TTouchEvent__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tapplication.o(.constdata__ZTV11TTouchEvent)
</UL>
<P><STRONG><a name="[2bf]"></a>TTouchEvent::~TTouchEvent__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tapplication.o(i._ZN11TTouchEventD1Ev), UNUSED)

<P><STRONG><a name="[257]"></a>tWidgetList::getCurrent()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tpainter.o(i._ZN11tWidgetList10getCurrentEv))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
</UL>

<P><STRONG><a name="[9d]"></a>tWidgetList::clear()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, twidget.o(i._ZN11tWidgetList5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tWidgetList::clear() &rArr; TList&lang;TWidget*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::clear()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV11tWidgetList)
</UL>
<P><STRONG><a name="[1e8]"></a>tWidgetList::append(TWidget*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, twidget.o(i._ZN11tWidgetList6appendEP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tWidgetList::append(TWidget*) &rArr; TList&lang;TWidget*&rang;::append(TWidget*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::append(TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[1ea]"></a>tWidgetList::remove(TWidget*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, tdialog.o(i._ZN11tWidgetList6removeEP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tWidgetList::remove(TWidget*) &rArr; TList&lang;TWidget*&rang;::remove(TWidget*) &rArr; TList&lang;TWidget*&rang;::find(TWidget*, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::remove(TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[1ec]"></a>tWidgetList::getNext()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tpainter.o(i._ZN11tWidgetList7getNextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tWidgetList::getNext()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::next()
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
</UL>

<P><STRONG><a name="[1ee]"></a>tWidgetList::getFirst()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tpainter.o(i._ZN11tWidgetList8getFirstEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tWidgetList::getFirst()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::first()
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
</UL>

<P><STRONG><a name="[9f]"></a>tWidgetList::~tWidgetList__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, twidget.o(i._ZN11tWidgetListD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = tWidgetList::~tWidgetList__deallocating() &rArr; tWidgetList::~tWidgetList() &rArr; TList&lang;TWidget*&rang;::~TList() &rArr; TList&lang;TWidget*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::~tWidgetList()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV11tWidgetList)
</UL>
<P><STRONG><a name="[9e]"></a>tWidgetList::~tWidgetList()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, twidget.o(i._ZN11tWidgetListD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = tWidgetList::~tWidgetList() &rArr; TList&lang;TWidget*&rang;::~TList() &rArr; TList&lang;TWidget*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::~TList()
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::~tWidgetList__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV11tWidgetList)
</UL>
<P><STRONG><a name="[2c0]"></a>tWidgetList::~tWidgetList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, twidget.o(i._ZN11tWidgetListD1Ev), UNUSED)

<P><STRONG><a name="[1f0]"></a>TApplication::distribute()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tapplication.o(i._ZN12TApplication10distributeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TApplication::distribute() &rArr; TApplication::visitAll(TObject*, TApplication*) &rArr;  TApplication::visitAll(TObject*, TApplication*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::run()
</UL>

<P><STRONG><a name="[1b8]"></a>TApplication::run()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tapplication.o(i._ZN12TApplication3runEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TApplication::run() &rArr; TApplication::translate(TDirver*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::translate(TDirver*)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::distribute()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[1f4]"></a>TApplication::emit(TObject*)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, tapplication.o(i._ZN12TApplication4emitEP7TObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TApplication::emit(TObject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
</UL>

<P><STRONG><a name="[1b7]"></a>TApplication::show()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tapplication.o(i._ZN12TApplication4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TApplication::show() &rArr; TWidget::showAll(TWidget*) &rArr;  TWidget::showAll(TWidget*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll(TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[1fb]"></a>TApplication::destroy()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tapplication.o(i._ZN12TApplication7destroyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TApplication::destroy()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::~TApplication()
</UL>

<P><STRONG><a name="[1f1]"></a>TApplication::visitAll(TObject*, TApplication*)</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, tapplication.o(i._ZN12TApplication8visitAllEP7TObjectPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = TApplication::visitAll(TObject*, TApplication*) &rArr;  TApplication::visitAll(TObject*, TApplication*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::first()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::next()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::setCurIndex(long)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getCurIndex()
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::setCurNode(tLNode&lang;TObject*&rang;*)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getCurrent()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::emit(TObject*)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::distribute()
</UL>

<P><STRONG><a name="[1f2]"></a>TApplication::translate(TDirver*)</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, tapplication.o(i._ZN12TApplication9translateEP7TDirver))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TApplication::translate(TDirver*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::run()
</UL>

<P><STRONG><a name="[1ae]"></a>TApplication::TApplication(TWidget*, TDirver*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tapplication.o(i._ZN12TApplicationC1EP7TWidgetP7TDirver))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2c1]"></a>TApplication::TApplication__sub_object(TWidget*, TDirver*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, tapplication.o(i._ZN12TApplicationC1EP7TWidgetP7TDirver), UNUSED)

<P><STRONG><a name="[1b9]"></a>TApplication::~TApplication()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tapplication.o(i._ZN12TApplicationD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TApplication::~TApplication() &rArr; TApplication::destroy()
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::destroy()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2c2]"></a>TApplication::~TApplication__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tapplication.o(i._ZN12TApplicationD1Ev), UNUSED)

<P><STRONG><a name="[1fc]"></a>TConnectList::at(unsigned long)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, tobject.o(i._ZN12TConnectList2atEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TConnectList::at(unsigned long) &rArr; TList&lang;TConnection*&rang;::locate(unsigned long)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::locate(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
</UL>

<P><STRONG><a name="[1fe]"></a>TConnectList::find(void(TObject::*)(int, int))</STRONG> (Thumb, 134 bytes, Stack size 96 bytes, tconnectlist.o(i._ZN12TConnectList4findEM7TObjectFviiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TConnectList::find(void(TObject::*)(int, int))
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::first()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::next()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
</UL>

<P><STRONG><a name="[a2]"></a>TConnectList::clear()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tobject.o(i._ZN12TConnectList5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TConnectList::clear() &rArr; TList&lang;TConnection*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::clear()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tobject.o(.constdata__ZTV12TConnectList)
</UL>
<P><STRONG><a name="[a7]"></a>TRadioButton::sig_depress(long, long)</STRONG> (Thumb, 146 bytes, Stack size 80 bytes, tradiobutton.o(i._ZN12TRadioButton11sig_depressEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = TRadioButton::sig_depress(long, long) &rArr; TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[a8]"></a>TRadioButton::sig_release(long, long)</STRONG> (Thumb, 150 bytes, Stack size 80 bytes, tradiobutton.o(i._ZN12TRadioButton11sig_releaseEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = TRadioButton::sig_release(long, long) &rArr; TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::changeOtherSelect()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[1b2]"></a>TRadioButton::addNextRadio(TRadioButton*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tradiobutton.o(i._ZN12TRadioButton12addNextRadioEPS_))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[203]"></a>TRadioButton::changeOtherSelect()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tradiobutton.o(i._ZN12TRadioButton17changeOtherSelectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TRadioButton::changeOtherSelect()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
</UL>

<P><STRONG><a name="[a6]"></a>TRadioButton::show()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tradiobutton.o(i._ZN12TRadioButton4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TRadioButton::show() &rArr; TWidget::refresh() &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[a9]"></a>TRadioButton::release()</STRONG> (Thumb, 126 bytes, Stack size 72 bytes, tradiobutton.o(i._ZN12TRadioButton7releaseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = TRadioButton::release() &rArr; TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[204]"></a>TRadioButton::delRadio()</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tradiobutton.o(i._ZN12TRadioButton8delRadioEv))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::~TRadioButton()
</UL>

<P><STRONG><a name="[1b1]"></a>TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 166 bytes, Stack size 80 bytes, tradiobutton.o(i._ZN12TRadioButtonC1EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*) &rArr; TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::TAbstractButton__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawRadio(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2c3]"></a>TRadioButton::TRadioButton__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, tradiobutton.o(i._ZN12TRadioButtonC1EllllPKcP7TWidget), UNUSED)

<P><STRONG><a name="[a5]"></a>TRadioButton::~TRadioButton__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tradiobutton.o(i._ZN12TRadioButtonD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TRadioButton::~TRadioButton__deallocating() &rArr; TRadioButton::~TRadioButton() &rArr; TAbstractButton::~TAbstractButton__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::~TRadioButton()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[a4]"></a>TRadioButton::~TRadioButton()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tguimain.o(i._ZN12TRadioButtonD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TRadioButton::~TRadioButton() &rArr; TAbstractButton::~TAbstractButton__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::delRadio()
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::~TAbstractButton__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::~TRadioButton__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[2c4]"></a>TRadioButton::~TRadioButton__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tguimain.o(i._ZN12TRadioButtonD1Ev), UNUSED)

<P><STRONG><a name="[206]"></a>TTouchDirver::changeLock()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tdirver.o(i._ZN12TTouchDirver10changeLockEv))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchDirver::obtainData()
</UL>

<P><STRONG><a name="[ac]"></a>TTouchDirver::obtainData()</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, tdirver.o(i._ZN12TTouchDirver10obtainDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TTouchDirver::obtainData()
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTouchY
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTouchX
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getState
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDirver::setType(long)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchDirver::changeLock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tdirver.o(.constdata__ZTV12TTouchDirver)
</UL>
<P><STRONG><a name="[ab]"></a>TTouchDirver::dataBack()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tdirver.o(i._ZN12TTouchDirver8dataBackEv))
<BR>[Address Reference Count : 1]<UL><LI> tdirver.o(.constdata__ZTV12TTouchDirver)
</UL>
<P><STRONG><a name="[aa]"></a>TTouchDirver::dataFront()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tdirver.o(i._ZN12TTouchDirver9dataFrontEv))
<BR>[Address Reference Count : 1]<UL><LI> tdirver.o(.constdata__ZTV12TTouchDirver)
</UL>
<P><STRONG><a name="[93]"></a>TAbstractButton::closeEvent(TCloseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton10closeEventEP11TCloseEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[8e]"></a>TAbstractButton::enterEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton10enterEventEP6TEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[8f]"></a>TAbstractButton::leaveEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton10leaveEventEP6TEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[90]"></a>TAbstractButton::painTEvent(TPainTEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton10painTEventEP11TPainTEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[92]"></a>TAbstractButton::resizeEvent(TResizeEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton11resizeEventEP12TResizeEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[8c]"></a>TAbstractButton::focusInEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton12focusInEventEP11TFocusEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[8d]"></a>TAbstractButton::focusOuTEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton13focusOuTEventEP11TFocusEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[8a]"></a>TAbstractButton::keyPressEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton13keyPressEventEP9TKeyEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[89]"></a>TAbstractButton::mouseMoveEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton14mouseMoveEventEP11TMouseEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[84]"></a>TAbstractButton::touchMoveEvent(TTouchEvent*)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, tabstractbutton.o(i._ZN15TAbstractButton14touchMoveEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TAbstractButton::touchMoveEvent(TTouchEvent*) &rArr; TWidget::isInRealArea(long, long) &rArr; TWidget::isInArea(long, long) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[8b]"></a>TAbstractButton::keyReleaseEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton15keyReleaseEventEP9TKeyEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[88]"></a>TAbstractButton::mouseClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton15mouseClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[85]"></a>TAbstractButton::mousePressEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton15mousePressEventEP11TMouseEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[83]"></a>TAbstractButton::touchClickEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton15touchClickEventEP11TTouchEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[81]"></a>TAbstractButton::touchPressEvent(TTouchEvent*)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, tabstractbutton.o(i._ZN15TAbstractButton15touchPressEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TAbstractButton::touchPressEvent(TTouchEvent*) &rArr; TWidget::isInRealArea(long, long) &rArr; TWidget::isInArea(long, long) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[86]"></a>TAbstractButton::mouseReleaseEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton17mouseReleaseEventEP11TMouseEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[82]"></a>TAbstractButton::touchReleaseEvent(TTouchEvent*)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, tabstractbutton.o(i._ZN15TAbstractButton17touchReleaseEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TAbstractButton::touchReleaseEvent(TTouchEvent*) &rArr; TWidget::isInRealArea(long, long) &rArr; TWidget::isInArea(long, long) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[87]"></a>TAbstractButton::mouseDoubleClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton21mouseDoubleClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[91]"></a>TAbstractButton::moveEvent(TMoveEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZN15TAbstractButton9moveEventEP10TMoveEvent))
<BR>[Address Reference Count : 4]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
</UL>
<P><STRONG><a name="[1e6]"></a>TAbstractButton::TAbstractButton__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, tabstractbutton.o(i._ZN15TAbstractButtonC2EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = TAbstractButton::TAbstractButton__sub_object(long, long, long, long, const char*, TWidget*) &rArr; TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*) &rArr; TWidget::chgPareInValid() &rArr; TWidget::addAchgInvalid(TWidget*, TRect*, TRect*) &rArr; TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
</UL>

<P><STRONG><a name="[ae]"></a>TAbstractButton::~TAbstractButton__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tabstractbutton.o(i._ZN15TAbstractButtonD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TAbstractButton::~TAbstractButton__deallocating() &rArr; TAbstractButton::~TAbstractButton__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::~TAbstractButton__sub_object()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
</UL>
<P><STRONG><a name="[2c5]"></a>TAbstractButton::~TAbstractButton()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tguimain.o(i._ZN15TAbstractButtonD2Ev), UNUSED)

<P><STRONG><a name="[ad]"></a>TAbstractButton::~TAbstractButton__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tguimain.o(i._ZN15TAbstractButtonD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TAbstractButton::~TAbstractButton__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::~TAbstractButton__deallocating()
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::~TRadioButton()
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::~TPushButton()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
</UL>
<P><STRONG><a name="[c3]"></a>TAbstractSlider::closeEvent(TCloseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider10closeEventEP11TCloseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[be]"></a>TAbstractSlider::enterEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider10enterEventEP6TEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[bf]"></a>TAbstractSlider::leaveEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider10leaveEventEP6TEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[c0]"></a>TAbstractSlider::painTEvent(TPainTEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider10painTEventEP11TPainTEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[c2]"></a>TAbstractSlider::resizeEvent(TResizeEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider11resizeEventEP12TResizeEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[bc]"></a>TAbstractSlider::focusInEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider12focusInEventEP11TFocusEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[bd]"></a>TAbstractSlider::focusOuTEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider13focusOuTEventEP11TFocusEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[ba]"></a>TAbstractSlider::keyPressEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider13keyPressEventEP9TKeyEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[b9]"></a>TAbstractSlider::mouseMoveEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider14mouseMoveEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[b4]"></a>TAbstractSlider::touchMoveEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider14touchMoveEventEP11TTouchEvent))
<BR>[Address Reference Count : 1]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
</UL>
<P><STRONG><a name="[bb]"></a>TAbstractSlider::keyReleaseEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider15keyReleaseEventEP9TKeyEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[b8]"></a>TAbstractSlider::mouseClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider15mouseClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[b5]"></a>TAbstractSlider::mousePressEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider15mousePressEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[b3]"></a>TAbstractSlider::touchClickEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider15touchClickEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[b1]"></a>TAbstractSlider::touchPressEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider15touchPressEventEP11TTouchEvent))
<BR>[Address Reference Count : 1]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
</UL>
<P><STRONG><a name="[b6]"></a>TAbstractSlider::mouseReleaseEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider17mouseReleaseEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[b2]"></a>TAbstractSlider::touchReleaseEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider17touchReleaseEventEP11TTouchEvent))
<BR>[Address Reference Count : 1]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
</UL>
<P><STRONG><a name="[b7]"></a>TAbstractSlider::mouseDoubleClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider21mouseDoubleClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[c1]"></a>TAbstractSlider::moveEvent(TMoveEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tabstractslider.o(i._ZN15TAbstractSlider9moveEventEP10TMoveEvent))
<BR>[Address Reference Count : 2]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[20e]"></a>TAbstractSlider::TAbstractSlider__sub_object(long, long, long, long, const char*, TWidget*, bool)</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, tabstractslider.o(i._ZN15TAbstractSliderC2EllllPKcP7TWidgetb))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = TAbstractSlider::TAbstractSlider__sub_object(long, long, long, long, const char*, TWidget*, bool) &rArr; TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*) &rArr; TWidget::chgPareInValid() &rArr; TWidget::addAchgInvalid(TWidget*, TRect*, TRect*) &rArr; TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
</UL>

<P><STRONG><a name="[b0]"></a>TAbstractSlider::~TAbstractSlider__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tabstractslider.o(i._ZN15TAbstractSliderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TAbstractSlider::~TAbstractSlider__deallocating() &rArr; TAbstractSlider::~TAbstractSlider__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractSlider::~TAbstractSlider__sub_object()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
</UL>
<P><STRONG><a name="[2c6]"></a>TAbstractSlider::~TAbstractSlider()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tabstractslider.o(i._ZN15TAbstractSliderD2Ev), UNUSED)

<P><STRONG><a name="[af]"></a>TAbstractSlider::~TAbstractSlider__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tabstractslider.o(i._ZN15TAbstractSliderD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TAbstractSlider::~TAbstractSlider__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractSlider::~TAbstractSlider__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
</UL>
<P><STRONG><a name="[c6]"></a>User::show()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, user.o(i._ZN4User4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = User::show() &rArr; TWidget::refresh() &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user.o(.constdata__ZTV4User)
</UL>
<P><STRONG><a name="[1ad]"></a>User::User(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 98 bytes, Stack size 88 bytes, user.o(i._ZN4UserC1EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = User::User(long, long, long, long, const char*, TWidget*) &rArr; TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*) &rArr; TWidget::chgPareInValid() &rArr; TWidget::addAchgInvalid(TWidget*, TRect*, TRect*) &rArr; TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::setColors(unsigned long, unsigned long)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2c7]"></a>User::User__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, user.o(i._ZN4UserC1EllllPKcP7TWidget), UNUSED)

<P><STRONG><a name="[c5]"></a>User::~User__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, user.o(i._ZN4UserD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = User::~User__deallocating() &rArr; User::~User() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::~User()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user.o(.constdata__ZTV4User)
</UL>
<P><STRONG><a name="[c4]"></a>User::~User()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user.o(i._ZN4UserD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = User::~User() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::~User__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user.o(.constdata__ZTV4User)
</UL>
<P><STRONG><a name="[2c8]"></a>User::~User__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, user.o(i._ZN4UserD1Ev), UNUSED)

<P><STRONG><a name="[21e]"></a>TRect::moveTopLeft(long, long)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, trect.o(i._ZN5TRect11moveTopLeftEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TRect::moveTopLeft(long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[227]"></a>TRect::setTop(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tpainter.o(i._ZN5TRect6setTopEi))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::restRect(long, long, long, long, TRect&, TRect&)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[226]"></a>TRect::setLeft(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tpainter.o(i._ZN5TRect7setLeftEi))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::restRect(long, long, long, long, TRect&, TRect&)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[252]"></a>TRect::setRight(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tpainter.o(i._ZN5TRect8setRightEi))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[228]"></a>TRect::setWidth(int)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, trect.o(i._ZN5TRect8setWidthEi))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::restRect(long, long, long, long, TRect&, TRect&)
</UL>

<P><STRONG><a name="[255]"></a>TRect::setBottom(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tpainter.o(i._ZN5TRect9setBottomEi))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[229]"></a>TRect::setHeight(int)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, trect.o(i._ZN5TRect9setHeightEi))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::restRect(long, long, long, long, TRect&, TRect&)
</UL>

<P><STRONG><a name="[1c4]"></a>TRect::TRect(int, int, int, int)</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, tpainter.o(i._ZN5TRectC1Eiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TRect::TRect(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawFullRect(long, long, long, long)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVLine(long, long, long)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawPoint(long, long)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHLine(long, long, long)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::displayEnChar(long, long, unsigned char, bool)
</UL>

<P><STRONG><a name="[2c9]"></a>TRect::TRect__sub_object(int, int, int, int)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, tpainter.o(i._ZN5TRectC1Eiiii), UNUSED)

<P><STRONG><a name="[24f]"></a>TRect::TRect()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, twidget.o(i._ZN5TRectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::intersect(const TRect&) const
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[2ca]"></a>TRect::TRect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, twidget.o(i._ZN5TRectC1Ev), UNUSED)

<P><STRONG><a name="[e5]"></a>TArray::deleteData(TArray::array_data*)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, tarray.o(i._ZN6TArray10deleteDataEPNS_10array_dataE))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TArray::deleteData(TArray::array_data*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::~TArray()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tarray.o(.constdata__ZTV6TArray)
<LI> tstring.o(.constdata__ZTV7TString)
</UL>
<P><STRONG><a name="[20f]"></a>TArray::store(const char*, unsigned long)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tarray.o(i._ZN6TArray5storeEPKcm))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TArray::store(const char*, unsigned long) &rArr; TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::resize(unsigned long)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::setStr(const char*)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::setNum(unsigned long)
</UL>

<P><STRONG><a name="[210]"></a>TArray::resize(unsigned long)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, tarray.o(i._ZN6TArray6resizeEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::duplicate(const char*, unsigned long)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::store(const char*, unsigned long)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::resize(unsigned long)
</UL>

<P><STRONG><a name="[e4]"></a>TArray::newData()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, tarray.o(i._ZN6TArray7newDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TArray::newData() &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::TArray()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tarray.o(.constdata__ZTV6TArray)
<LI> tstring.o(.constdata__ZTV7TString)
</UL>
<P><STRONG><a name="[211]"></a>TArray::duplicate(const char*, unsigned long)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, tarray.o(i._ZN6TArray9duplicateEPKcm))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::resize(unsigned long)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::TString(const char*)
</UL>

<P><STRONG><a name="[215]"></a>TArray::TArray()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tarray.o(i._ZN6TArrayC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TArray::TArray() &rArr; TArray::newData() &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::newData()
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::TString(const char*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::slot_showValue(long, long)
</UL>

<P><STRONG><a name="[2cb]"></a>TArray::TArray__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tarray.o(i._ZN6TArrayC1Ev), UNUSED)

<P><STRONG><a name="[e3]"></a>TArray::~TArray()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, tarray.o(i._ZN6TArrayD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TArray::~TArray() &rArr; TArray::deleteData(TArray::array_data*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tShared::deref()
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::deleteData(TArray::array_data*)
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::~TString()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tarray.o(.constdata__ZTV6TArray)
</UL>
<P><STRONG><a name="[2cc]"></a>TArray::~TArray__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tarray.o(i._ZN6TArrayD1Ev), UNUSED)

<P><STRONG><a name="[217]"></a>TEvent::peErrMsg()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, teven.o(i._ZN6TEvent8peErrMsgEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TEvent::peErrMsg() &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEvent::~TEvent()
</UL>

<P><STRONG><a name="[e7]"></a>TEvent::~TEvent__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tapplication.o(i._ZN6TEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TEvent::~TEvent__deallocating() &rArr; TEvent::~TEvent() &rArr; TEvent::peErrMsg() &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEvent::~TEvent()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tapplication.o(.constdata__ZTV6TEvent)
</UL>
<P><STRONG><a name="[e6]"></a>TEvent::~TEvent()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tapplication.o(i._ZN6TEventD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TEvent::~TEvent() &rArr; TEvent::peErrMsg() &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEvent::peErrMsg()
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEvent::~TEvent__deallocating()
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::~TTouchEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tapplication.o(.constdata__ZTV6TEvent)
</UL>
<P><STRONG><a name="[2cd]"></a>TEvent::~TEvent__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tapplication.o(i._ZN6TEventD1Ev), UNUSED)

<P><STRONG><a name="[fc]"></a>TFrame::closeEvent(TCloseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame10closeEventEP11TCloseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f7]"></a>TFrame::enterEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame10enterEventEP6TEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f8]"></a>TFrame::leaveEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame10leaveEventEP6TEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f9]"></a>TFrame::painTEvent(TPainTEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame10painTEventEP11TPainTEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[fb]"></a>TFrame::resizeEvent(TResizeEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame11resizeEventEP12TResizeEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f5]"></a>TFrame::focusInEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame12focusInEventEP11TFocusEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f6]"></a>TFrame::focusOuTEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame13focusOuTEventEP11TFocusEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f3]"></a>TFrame::keyPressEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame13keyPressEventEP9TKeyEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f2]"></a>TFrame::mouseMoveEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame14mouseMoveEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[ed]"></a>TFrame::touchMoveEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame14touchMoveEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f4]"></a>TFrame::keyReleaseEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame15keyReleaseEventEP9TKeyEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f1]"></a>TFrame::mouseClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame15mouseClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[ee]"></a>TFrame::mousePressEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame15mousePressEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[ec]"></a>TFrame::touchClickEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame15touchClickEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[ea]"></a>TFrame::touchPressEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame15touchPressEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[ef]"></a>TFrame::mouseReleaseEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame17mouseReleaseEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[eb]"></a>TFrame::touchReleaseEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame17touchReleaseEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[f0]"></a>TFrame::mouseDoubleClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame21mouseDoubleClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[fa]"></a>TFrame::moveEvent(TMoveEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tframe.o(i._ZN6TFrame9moveEventEP10TMoveEvent))
<BR>[Address Reference Count : 2]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[218]"></a>TFrame::TFrame__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, tframe.o(i._ZN6TFrameC2EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = TFrame::TFrame__sub_object(long, long, long, long, const char*, TWidget*) &rArr; TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*) &rArr; TWidget::chgPareInValid() &rArr; TWidget::addAchgInvalid(TWidget*, TRect*, TRect*) &rArr; TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::TLabel(long, long, long, long, const char*, TWidget*)
</UL>

<P><STRONG><a name="[e9]"></a>TFrame::~TFrame__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tframe.o(i._ZN6TFrameD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TFrame::~TFrame__deallocating() &rArr; TFrame::~TFrame__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFrame::~TFrame__sub_object()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
</UL>
<P><STRONG><a name="[2ce]"></a>TFrame::~TFrame()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tframe.o(i._ZN6TFrameD2Ev), UNUSED)

<P><STRONG><a name="[e8]"></a>TFrame::~TFrame__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tframe.o(i._ZN6TFrameD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TFrame::~TFrame__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::~TLabel()
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFrame::~TFrame__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tframe.o(.constdata__ZTV6TFrame)
</UL>
<P><STRONG><a name="[7c]"></a>TLabel::slot_showValue(long, long)</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, tlabel.o(i._ZN6TLabel14slot_showValueEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = TLabel::slot_showValue(long, long) &rArr; TString::setNum(unsigned long) &rArr; TArray::store(const char*, unsigned long) &rArr; TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::TArray()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::setNum(unsigned long)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::setName(const char*)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tguimain.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>TLabel::show()</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, tlabel.o(i._ZN6TLabel4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = TLabel::show() &rArr; TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[1b4]"></a>TLabel::TLabel(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 150 bytes, Stack size 96 bytes, tlabel.o(i._ZN6TLabelC1EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = TLabel::TLabel(long, long, long, long, const char*, TWidget*) &rArr; TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFrame::TFrame__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawLabel(long, long, long, long, const char*, unsigned long, unsigned long)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2cf]"></a>TLabel::TLabel__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 0 bytes, Stack size 96 bytes, tlabel.o(i._ZN6TLabelC1EllllPKcP7TWidget), UNUSED)

<P><STRONG><a name="[fe]"></a>TLabel::~TLabel__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tlabel.o(i._ZN6TLabelD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TLabel::~TLabel__deallocating() &rArr; TLabel::~TLabel() &rArr; TFrame::~TFrame__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::~TLabel()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[fd]"></a>TLabel::~TLabel()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tguimain.o(i._ZN6TLabelD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TLabel::~TLabel() &rArr; TFrame::~TFrame__sub_object() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFrame::~TFrame__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::~TLabel__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tlabel.o(.constdata__ZTV6TLabel)
</UL>
<P><STRONG><a name="[2d0]"></a>TLabel::~TLabel__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tguimain.o(i._ZN6TLabelD1Ev), UNUSED)

<P><STRONG><a name="[1df]"></a>TBuffer::getBufAddr()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcheckbox.o(i._ZN7TBuffer10getBufAddrEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
</UL>

<P><STRONG><a name="[21b]"></a>TBuffer::TBuffer(unsigned long*, unsigned long, unsigned long, unsigned long)</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, tbuffer.o(i._ZN7TBufferC1EPmmmm))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TBuffer::TBuffer(unsigned long*, unsigned long, unsigned long, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
</UL>

<P><STRONG><a name="[2d1]"></a>TBuffer::TBuffer__sub_object(unsigned long*, unsigned long, unsigned long, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, tbuffer.o(i._ZN7TBufferC1EPmmmm), UNUSED)

<P><STRONG><a name="[21d]"></a>TBuffer::~TBuffer()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tbuffer.o(i._ZN7TBufferD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TBuffer::~TBuffer() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>

<P><STRONG><a name="[2d2]"></a>TBuffer::~TBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tbuffer.o(i._ZN7TBufferD1Ev), UNUSED)

<P><STRONG><a name="[115]"></a>TDialog::closeEvent(TCloseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog10closeEventEP11TCloseEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[110]"></a>TDialog::enterEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog10enterEventEP6TEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[111]"></a>TDialog::leaveEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog10leaveEventEP6TEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[112]"></a>TDialog::painTEvent(TPainTEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog10painTEventEP11TPainTEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[114]"></a>TDialog::resizeEvent(TResizeEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog11resizeEventEP12TResizeEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[10e]"></a>TDialog::focusInEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog12focusInEventEP11TFocusEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[10f]"></a>TDialog::focusOuTEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog13focusOuTEventEP11TFocusEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[10c]"></a>TDialog::keyPressEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog13keyPressEventEP9TKeyEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[10b]"></a>TDialog::mouseMoveEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog14mouseMoveEventEP11TMouseEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[106]"></a>TDialog::touchMoveEvent(TTouchEvent*)</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, tdialog.o(i._ZN7TDialog14touchMoveEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = TDialog::touchMoveEvent(TTouchEvent*) &rArr; TWidget::chgInValid(TRect*, TRect*) &rArr; TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*) &rArr;  TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect(int, int, int, int)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::moveTopLeft(long, long)
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll()
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::restRect(long, long, long, long, TRect&, TRect&)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[10d]"></a>TDialog::keyReleaseEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog15keyReleaseEventEP9TKeyEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[10a]"></a>TDialog::mouseClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog15mouseClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[107]"></a>TDialog::mousePressEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog15mousePressEventEP11TMouseEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[105]"></a>TDialog::touchClickEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog15touchClickEventEP11TTouchEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[103]"></a>TDialog::touchPressEvent(TTouchEvent*)</STRONG> (Thumb, 518 bytes, Stack size 56 bytes, tdialog.o(i._ZN7TDialog15touchPressEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = TDialog::touchPressEvent(TTouchEvent*) &rArr; TBufPainter::drawDialogTitle(long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::first()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::next()
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialogTitle(long, long, long, const char*, bool)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::first()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::next()
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll()
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getInvalidList()
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::remove(TWidget*)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[108]"></a>TDialog::mouseReleaseEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog17mouseReleaseEventEP11TMouseEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[104]"></a>TDialog::touchReleaseEvent(TTouchEvent*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog17touchReleaseEventEP11TTouchEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[109]"></a>TDialog::mouseDoubleClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog21mouseDoubleClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[102]"></a>TDialog::show()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tdialog.o(i._ZN7TDialog4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TDialog::show() &rArr; TWidget::refresh() &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[221]"></a>TDialog::restRect(long, long, long, long, TRect&, TRect&)</STRONG> (Thumb, 456 bytes, Stack size 40 bytes, tdialog.o(i._ZN7TDialog8restRectEllllR5TRectS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TDialog::restRect(long, long, long, long, TRect&, TRect&) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setLeft(int)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setTop(int)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setHeight(int)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setWidth(int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[113]"></a>TDialog::moveEvent(TMoveEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TDialog9moveEventEP10TMoveEvent))
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[1b5]"></a>TDialog::TDialog(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 166 bytes, Stack size 80 bytes, tdialog.o(i._ZN7TDialogC1EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = TDialog::TDialog(long, long, long, long, const char*, TWidget*) &rArr; TBufPainter::drawDialog(long, long, long, long, const char*, bool, unsigned long) &rArr; TBufPainter::drawDialogTitle(long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawDialog(long, long, long, long, const char*, bool, unsigned long)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2d3]"></a>TDialog::TDialog__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, tdialog.o(i._ZN7TDialogC1EllllPKcP7TWidget), UNUSED)

<P><STRONG><a name="[101]"></a>TDialog::~TDialog__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tdialog.o(i._ZN7TDialogD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TDialog::~TDialog__deallocating() &rArr; TDialog::~TDialog() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::~TDialog()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[100]"></a>TDialog::~TDialog()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tdialog.o(i._ZN7TDialogD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TDialog::~TDialog() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::~TDialog__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tdialog.o(.constdata__ZTV7TDialog)
</UL>
<P><STRONG><a name="[2d4]"></a>TDialog::~TDialog__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tdialog.o(i._ZN7TDialogD1Ev), UNUSED)

<P><STRONG><a name="[118]"></a>TDirver::obtainData()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tguimain.o(i._ZN7TDirver10obtainDataEv))
<BR>[Address Reference Count : 1]<UL><LI> tguimain.o(.constdata__ZTV7TDirver)
</UL>
<P><STRONG><a name="[207]"></a>TDirver::setType(long)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tdirver.o(i._ZN7TDirver7setTypeEl))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchDirver::obtainData()
</UL>

<P><STRONG><a name="[117]"></a>TDirver::dataBack()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tguimain.o(i._ZN7TDirver8dataBackEv))
<BR>[Address Reference Count : 1]<UL><LI> tguimain.o(.constdata__ZTV7TDirver)
</UL>
<P><STRONG><a name="[116]"></a>TDirver::dataFront()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tguimain.o(i._ZN7TDirver9dataFrontEv))
<BR>[Address Reference Count : 1]<UL><LI> tguimain.o(.constdata__ZTV7TDirver)
</UL>
<P><STRONG><a name="[201]"></a>TObject::getParents()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tradiobutton.o(i._ZN7TObject10getParentsEv))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgPareInValid()
</UL>

<P><STRONG><a name="[22a]"></a>TObject::destroyChild(TObject*)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, tobject.o(i._ZN7TObject12destroyChildEPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::remove(TObject*)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::last()
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getLast()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::destroyChild(TObject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::~TObject__sub_object()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::destroyChild(TObject*)
</UL>

<P><STRONG><a name="[22f]"></a>TObject::getChildList()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, twidget.o(i._ZN7TObject12getChildListEv))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll(TWidget*)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::unlink(TObject*)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::relink(tLNode&lang;TObject*&rang;*)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[22e]"></a>TObject::relink(tLNode&lang;TObject*&rang;*)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, tobject.o(i._ZN7TObject6relinkEP6tLNodeIPS_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TObject::relink(tLNode&lang;TObject*&rang;*) &rArr; TList&lang;TObject*&rang;::relinkNode(tLNode&lang;TObject*&rang;*) &rArr; TList&lang;TObject*&rang;::unlink()
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getChildList()
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::relinkNode(tLNode&lang;TObject*&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
</UL>

<P><STRONG><a name="[231]"></a>TObject::unlink(TObject*)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tobject.o(i._ZN7TObject6unlinkEPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TObject::unlink(TObject*) &rArr; TList&lang;TObject*&rang;::find(TObject*, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getChildList()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::unlink()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::find(TObject*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
</UL>

<P><STRONG><a name="[1b6]"></a>TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, tobject.o(i._ZN7TObject7connectEMS_FviiEPS_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int)) &rArr; TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int)) &rArr; TFuncList::append(void(TObject::*)(int, int)) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFuncList::append(void(TObject::*)(int, int))
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFuncList::find(void(TObject::*)(int, int))
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::find(void(TObject::*)(int, int))
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::TList()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::append(TConnection*)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::append(TObject*)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::at(unsigned long)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[1e1]"></a>TObject::getName()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tcheckbox.o(i._ZN7TObject7getNameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TObject::getName() &rArr; TString::operator const char*() const
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::operator const char*() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::TLabel(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::show()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
</UL>

<P><STRONG><a name="[219]"></a>TObject::setName(const char*)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tobject.o(i._ZN7TObject7setNameEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TObject::setName(const char*) &rArr; TString::setStr(const char*) &rArr; TArray::store(const char*, unsigned long) &rArr; TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::TString(const char*)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::setStr(const char*)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::slot_showValue(long, long)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::TObject__sub_object(const char*, TObject*)
</UL>

<P><STRONG><a name="[23b]"></a>TObject::addChild(TObject*)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, tobject.o(i._ZN7TObject8addChildEPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TObject::addChild(TObject*) &rArr; TObjList::append(TObject*) &rArr; TList&lang;TObject*&rang;::append(TObject*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::TList()
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::findRef(TObject*, bool)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::append(TObject*)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::TObject__sub_object(const char*, TObject*)
</UL>

<P><STRONG><a name="[1e5]"></a>TObject::callSlot(void(TObject::*)(int, int), long, long)</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, tobject.o(i._ZN7TObject8callSlotEMS_FviiEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TObject::callSlot(void(TObject::*)(int, int), long, long) &rArr; TConnection::active(long, long) &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::find(void(TObject::*)(int, int))
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::active(long, long)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::at(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_valueChange(long, long)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
</UL>

<P><STRONG><a name="[23e]"></a>TObject::TObject__sub_object(const char*, TObject*)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, tobject.o(i._ZN7TObjectC2EPKcPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TObject::TObject__sub_object(const char*, TObject*) &rArr; TObject::setName(const char*) &rArr; TString::setStr(const char*) &rArr; TArray::store(const char*, unsigned long) &rArr; TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::setName(const char*)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::addChild(TObject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
</UL>

<P><STRONG><a name="[11a]"></a>TObject::~TObject__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tobject.o(i._ZN7TObjectD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TObject::~TObject__deallocating() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::~TObject__sub_object()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tobject.o(.constdata__ZTV7TObject)
</UL>
<P><STRONG><a name="[2d5]"></a>TObject::~TObject()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tobject.o(i._ZN7TObjectD2Ev), UNUSED)

<P><STRONG><a name="[119]"></a>TObject::~TObject__sub_object()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, tobject.o(i._ZN7TObjectD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::destroyChild(TObject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::~TObject__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tobject.o(.constdata__ZTV7TObject)
</UL>
<P><STRONG><a name="[122]"></a>TSlider::sig_depress(long, long)</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, tslider.o(i._ZN7TSlider11sig_depressEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = TSlider::sig_depress(long, long) &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[123]"></a>TSlider::sig_release(long, long)</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, tslider.o(i._ZN7TSlider11sig_releaseEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = TSlider::sig_release(long, long) &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[120]"></a>TSlider::touchMoveEvent(TTouchEvent*)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, tslider.o(i._ZN7TSlider14touchMoveEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TSlider::touchMoveEvent(TTouchEvent*)
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[125]"></a>TSlider::sig_valueChange(long, long)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, tslider.o(i._ZN7TSlider15sig_valueChangeEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = TSlider::sig_valueChange(long, long) &rArr; TObject::callSlot(void(TObject::*)(int, int), long, long) &rArr; TConnection::active(long, long) &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[11e]"></a>TSlider::touchPressEvent(TTouchEvent*)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, tslider.o(i._ZN7TSlider15touchPressEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TSlider::touchPressEvent(TTouchEvent*) &rArr; TWidget::isInRealArea(long, long) &rArr; TWidget::isInArea(long, long) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[11f]"></a>TSlider::touchReleaseEvent(TTouchEvent*)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tslider.o(i._ZN7TSlider17touchReleaseEventEP11TTouchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TSlider::touchReleaseEvent(TTouchEvent*) &rArr; TWidget::isInRealArea(long, long) &rArr; TWidget::isInArea(long, long) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::y() const
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::x() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[11d]"></a>TSlider::show()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tslider.o(i._ZN7TSlider4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TSlider::show() &rArr; TWidget::refresh() &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[124]"></a>TSlider::release()</STRONG> (Thumb, 182 bytes, Stack size 64 bytes, tslider.o(i._ZN7TSlider7releaseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = TSlider::release() &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[121]"></a>TSlider::sig_move(long, long)</STRONG> (Thumb, 272 bytes, Stack size 80 bytes, tslider.o(i._ZN7TSlider8sig_moveEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = TSlider::sig_move(long, long) &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[1b3]"></a>TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)</STRONG> (Thumb, 222 bytes, Stack size 80 bytes, tslider.o(i._ZN7TSliderC1EllllPKcP7TWidgetb))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool) &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractSlider::TAbstractSlider__sub_object(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawVertSlider(long, long, long, long, long, long, bool, unsigned long)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2d6]"></a>TSlider::TSlider__sub_object(long, long, long, long, const char*, TWidget*, bool)</STRONG> (Thumb, 0 bytes, Stack size 80 bytes, tslider.o(i._ZN7TSliderC1EllllPKcP7TWidgetb), UNUSED)

<P><STRONG><a name="[11c]"></a>TSlider::~TSlider__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tslider.o(i._ZN7TSliderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TSlider::~TSlider__deallocating() &rArr; TSlider::~TSlider() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::~TSlider()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[11b]"></a>TSlider::~TSlider()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, tguimain.o(i._ZN7TSliderD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TSlider::~TSlider() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::~TSlider__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tslider.o(.constdata__ZTV7TSlider)
</UL>
<P><STRONG><a name="[2d7]"></a>TSlider::~TSlider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, tguimain.o(i._ZN7TSliderD1Ev), UNUSED)

<P><STRONG><a name="[23f]"></a>TString::resize(unsigned long)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tstring.o(i._ZN7TString6resizeEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TString::resize(unsigned long) &rArr; TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::data() const
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::resize(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::setStr(const char*)
</UL>

<P><STRONG><a name="[21a]"></a>TString::setNum(unsigned long)</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, tstring.o(i._ZN7TString6setNumEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TString::setNum(unsigned long) &rArr; TArray::store(const char*, unsigned long) &rArr; TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::store(const char*, unsigned long)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::slot_showValue(long, long)
</UL>

<P><STRONG><a name="[23a]"></a>TString::setStr(const char*)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tstring.o(i._ZN7TString6setStrEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TString::setStr(const char*) &rArr; TArray::store(const char*, unsigned long) &rArr; TArray::resize(unsigned long) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::store(const char*, unsigned long)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::resize(unsigned long)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::setName(const char*)
</UL>

<P><STRONG><a name="[239]"></a>TString::TString(const char*)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tstring.o(i._ZN7TStringC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TString::TString(const char*) &rArr; TArray::duplicate(const char*, unsigned long) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::TArray()
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::duplicate(const char*, unsigned long)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::setName(const char*)
</UL>

<P><STRONG><a name="[2d8]"></a>TString::TString__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, tstring.o(i._ZN7TStringC1EPKc), UNUSED)

<P><STRONG><a name="[127]"></a>TString::~TString__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tstring.o(i._ZN7TStringD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TString::~TString__deallocating() &rArr; TString::~TString() &rArr; TArray::~TArray() &rArr; TArray::deleteData(TArray::array_data*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::~TString()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tstring.o(.constdata__ZTV7TString)
</UL>
<P><STRONG><a name="[126]"></a>TString::~TString()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tstring.o(i._ZN7TStringD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TString::~TString() &rArr; TArray::~TArray() &rArr; TArray::deleteData(TArray::array_data*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::~TArray()
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::~TString__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tstring.o(.constdata__ZTV7TString)
</UL>
<P><STRONG><a name="[2d9]"></a>TString::~TString__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tstring.o(i._ZN7TStringD1Ev), UNUSED)

<P><STRONG><a name="[222]"></a>TWidget::chgInValid(TRect*, TRect*)</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, twidget.o(i._ZN7TWidget10chgInValidEP5TRectS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TWidget::chgInValid(TRect*, TRect*) &rArr; TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*) &rArr;  TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::unlink(TObject*)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::relink(tLNode&lang;TObject*&rang;*)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getChildList()
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[d9]"></a>TWidget::closeEvent(TCloseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget10closeEventEP11TCloseEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[d4]"></a>TWidget::enterEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget10enterEventEP6TEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[d5]"></a>TWidget::leaveEvent(TEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget10leaveEventEP6TEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[d6]"></a>TWidget::painTEvent(TPainTEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget10painTEventEP11TPainTEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[244]"></a>TWidget::remInvalid(TWidget*)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, twidget.o(i._ZN7TWidget10remInvalidEPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TWidget::remInvalid(TWidget*) &rArr; TList&lang;TWidget*&rang;::remove(TWidget*) &rArr; TList&lang;TWidget*&rang;::find(TWidget*, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::remove(TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[21f]"></a>TWidget::chgChildsXY(TWidget*)</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, twidget.o(i._ZN7TWidget11chgChildsXYEPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = TWidget::chgChildsXY(TWidget*) &rArr;  TWidget::chgChildsXY(TWidget*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::moveTopLeft(long, long)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getFirst()
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getNext()
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getOffsetWH()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getChildList()
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[7f]"></a>TWidget::eventFilter(TEvent*)</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, twidget.o(i._ZN7TWidget11eventFilterEP6TEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TWidget::eventFilter(TEvent*)
</UL>
<BR>[Address Reference Count : 11]<UL><LI> user.o(.constdata__ZTV4User)
<LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
<LI> tdialog.o(.constdata__ZTV7TDialog)
<LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tlabel.o(.constdata__ZTV6TLabel)
<LI> tpushbutton.o(.constdata__ZTV11TPushButton)
<LI> tradiobutton.o(.constdata__ZTV12TRadioButton)
<LI> tslider.o(.constdata__ZTV7TSlider)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[246]"></a>TWidget::getOffsetWH()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, twidget.o(i._ZN7TWidget11getOffsetWHEv))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
</UL>

<P><STRONG><a name="[d8]"></a>TWidget::resizeEvent(TResizeEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget11resizeEventEP12TResizeEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[d2]"></a>TWidget::focusInEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget12focusInEventEP11TFocusEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[202]"></a>TWidget::getBackColor()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcheckbox.o(i._ZN7TWidget12getBackColorEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
</UL>

<P><STRONG><a name="[20c]"></a>TWidget::isInRealArea(long, long)</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, twidget.o(i._ZN7TWidget12isInRealAreaEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TWidget::isInRealArea(long, long) &rArr; TWidget::isInArea(long, long) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::getFirst()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::getNext()
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInArea(long, long)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchReleaseEvent(TTouchEvent*)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchPressEvent(TTouchEvent*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchMoveEvent(TTouchEvent*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchReleaseEvent(TTouchEvent*)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchPressEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[243]"></a>TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)</STRONG> (Thumb, 294 bytes, Stack size 48 bytes, twidget.o(i._ZN7TWidget13chgAllInValidEP8TObjListPS_P5TRectS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + In Cycle
<LI>Call Chain = TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*) &rArr;  TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::intersects(const TRect&) const
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getFirst()
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getNext()
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::setCurIndex(long)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getCurIndex()
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::setCurNode(tLNode&lang;TObject*&rang;*)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getCurrent()
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::remInvalid(TWidget*)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getChildList()
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[d3]"></a>TWidget::focusOuTEvent(TFocusEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget13focusOuTEventEP11TFocusEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[d0]"></a>TWidget::keyPressEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget13keyPressEventEP9TKeyEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[242]"></a>TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, twidget.o(i._ZN7TWidget14addAchgInvalidEPS_P5TRectS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = TWidget::addAchgInvalid(TWidget*, TRect*, TRect*) &rArr; TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::TList()
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::findRef(TWidget*, bool)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::append(TWidget*)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgInValid(TRect*, TRect*)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgPareInValid()
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[24d]"></a>TWidget::chgPareInValid()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, twidget.o(i._ZN7TWidget14chgPareInValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = TWidget::chgPareInValid() &rArr; TWidget::addAchgInvalid(TWidget*, TRect*, TRect*) &rArr; TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
</UL>

<P><STRONG><a name="[225]"></a>TWidget::getInvalidList()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TWidget14getInvalidListEv))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[cf]"></a>TWidget::mouseMoveEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget14mouseMoveEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[24b]"></a>TWidget::repaintInvaild(TRect*, TRect*)</STRONG> (Thumb, 426 bytes, Stack size 40 bytes, twidget.o(i._ZN7TWidget14repaintInvaildEP5TRectS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::isValid() const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::bottom() const
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::right() const
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::left() const
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::top() const
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setBottom(int)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setRight(int)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setLeft(int)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setTop(int)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect()
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[ca]"></a>TWidget::touchMoveEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget14touchMoveEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[d1]"></a>TWidget::keyReleaseEvent(TKeyEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget15keyReleaseEventEP9TKeyEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[ce]"></a>TWidget::mouseClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget15mouseClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[cb]"></a>TWidget::mousePressEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget15mousePressEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[c9]"></a>TWidget::touchClickEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget15touchClickEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[c7]"></a>TWidget::touchPressEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget15touchPressEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[cc]"></a>TWidget::mouseReleaseEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget17mouseReleaseEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[c8]"></a>TWidget::touchReleaseEvent(TTouchEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget17touchReleaseEventEP11TTouchEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[223]"></a>TWidget::x()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TWidget1xEv))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInArea(long, long)
</UL>

<P><STRONG><a name="[224]"></a>TWidget::y()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tdialog.o(i._ZN7TWidget1yEv))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInArea(long, long)
</UL>

<P><STRONG><a name="[cd]"></a>TWidget::mouseDoubleClickEvent(TMouseEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget21mouseDoubleClickEventEP11TMouseEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[1e3]"></a>TWidget::width()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, twidget.o(i._ZN7TWidget5widthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::width() const
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::TLabel(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::restRect(long, long, long, long, TRect&, TRect&)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::show()
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInArea(long, long)
</UL>

<P><STRONG><a name="[1e2]"></a>TWidget::height()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tcheckbox.o(i._ZN7TWidget6heightEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::TLabel(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::restRect(long, long, long, long, TRect&, TRect&)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::show()
</UL>

<P><STRONG><a name="[1dd]"></a>TWidget::getRect()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tpainter.o(i._ZN7TWidget7getRectEv))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[256]"></a>TWidget::rectCut(TRect*)</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, twidget.o(i._ZN7TWidget7rectCutEP5TRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + In Cycle
<LI>Call Chain = TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::intersect(const TRect&) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::isValid() const
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::bottom() const
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::right() const
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::left() const
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::top() const
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setBottom(int)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setRight(int)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setLeft(int)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setTop(int)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::getFirst()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::getNext()
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::getCurrent()
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[1e4]"></a>TWidget::refresh()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, twidget.o(i._ZN7TWidget7refreshEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TWidget::refresh() &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::show()
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::show()
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::show()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::show()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::show()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::show()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::show()
</UL>

<P><STRONG><a name="[1f3]"></a>TWidget::showAll(TWidget*)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, twidget.o(i._ZN7TWidget7showAllEPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = TWidget::showAll(TWidget*) &rArr;  TWidget::showAll(TWidget*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll(TWidget*)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getFirst()
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getNext()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getChildList()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::show()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll(TWidget*)
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll()
</UL>

<P><STRONG><a name="[220]"></a>TWidget::showAll()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tdialog.o(i._ZN7TWidget7showAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TWidget::showAll() &rArr; TWidget::showAll(TWidget*) &rArr;  TWidget::showAll(TWidget*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll(TWidget*)
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[248]"></a>TWidget::isInArea(long, long)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, twidget.o(i._ZN7TWidget8isInAreaEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TWidget::isInArea(long, long) &rArr; TWidget::width()
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::height() const
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInRealArea(long, long)
</UL>

<P><STRONG><a name="[1de]"></a>TWidget::getBuffer()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcheckbox.o(i._ZN7TWidget9getBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::TRadioButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::TPushButton(long, long, long, long, const char*, TWidget*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::release()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_release(long, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::sig_depress(long, long)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_move(long, long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::release()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_release(long, long)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::sig_depress(long, long)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::release()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_release(long, long)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::sig_depress(long, long)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::release()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_release(long, long)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::sig_depress(long, long)
</UL>

<P><STRONG><a name="[d7]"></a>TWidget::moveEvent(TMoveEvent*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user.o(i._ZN7TWidget9moveEventEP10TMoveEvent))
<BR>[Address Reference Count : 2]<UL><LI> user.o(.constdata__ZTV4User)
<LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[259]"></a>TWidget::transform(TRect*)</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, twidget.o(i._ZN7TWidget9transformEP5TRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TWidget::transform(TRect*) &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::bottom() const
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::right() const
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::left() const
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::top() const
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::height() const
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::width() const
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
</UL>

<P><STRONG><a name="[20d]"></a>TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 298 bytes, Stack size 56 bytes, twidget.o(i._ZN7TWidgetC2EllllPKcPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*) &rArr; TWidget::chgPareInValid() &rArr; TWidget::addAchgInvalid(TWidget*, TRect*, TRect*) &rArr; TWidget::repaintInvaild(TRect*, TRect*) &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setHeight(int)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::setWidth(int)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::y()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::x()
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getParents()
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::TObject__sub_object(const char*, TObject*)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::TBuffer(unsigned long*, unsigned long, unsigned long, unsigned long)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgPareInValid()
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect()
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractSlider::TAbstractSlider__sub_object(long, long, long, long, const char*, TWidget*, bool)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::TAbstractButton__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::TDialog(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::User(long, long, long, long, const char*, TWidget*)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFrame::TFrame__sub_object(long, long, long, long, const char*, TWidget*)
</UL>

<P><STRONG><a name="[129]"></a>TWidget::~TWidget__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, twidget.o(i._ZN7TWidgetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TWidget::~TWidget__deallocating() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[2da]"></a>TWidget::~TWidget()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, twidget.o(i._ZN7TWidgetD2Ev), UNUSED)

<P><STRONG><a name="[128]"></a>TWidget::~TWidget__sub_object()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, twidget.o(i._ZN7TWidgetD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::~TObject__sub_object()
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::~TBuffer()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractSlider::~TAbstractSlider__sub_object()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::~User()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::~TDialog()
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFrame::~TFrame__sub_object()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::~TSlider()
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::~TAbstractButton__sub_object()
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::~TCheckBox()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV7TWidget)
</UL>
<P><STRONG><a name="[216]"></a>tShared::deref()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tarray.o(i._ZN7tShared5derefEv))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::~TArray()
</UL>

<P><STRONG><a name="[1f6]"></a>TObjList::getCurrent()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, twidget.o(i._ZN8TObjList10getCurrentEv))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
</UL>

<P><STRONG><a name="[1f9]"></a>TObjList::setCurNode(tLNode&lang;TObject*&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, twidget.o(i._ZN8TObjList10setCurNodeEP6tLNodeIP7TObjectE))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
</UL>

<P><STRONG><a name="[1f7]"></a>TObjList::getCurIndex()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, twidget.o(i._ZN8TObjList11getCurIndexEv))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
</UL>

<P><STRONG><a name="[1f8]"></a>TObjList::setCurIndex(long)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, twidget.o(i._ZN8TObjList11setCurIndexEl))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
</UL>

<P><STRONG><a name="[12c]"></a>TObjList::compareItems(TObject*, TObject*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, tconnection.o(i._ZN8TObjList12compareItemsEP7TObjectS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TObjList::compareItems(TObject*, TObject*)
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::compareItems(TObject*, TObject*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV8TObjList)
</UL>
<P><STRONG><a name="[236]"></a>TObjList::append(TObject*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, tobject.o(i._ZN8TObjList6appendEP7TObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TObjList::append(TObject*) &rArr; TList&lang;TObject*&rang;::append(TObject*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::append(TObject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::addChild(TObject*)
</UL>

<P><STRONG><a name="[22b]"></a>TObjList::getLast()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tobject.o(i._ZN8TObjList7getLastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TObjList::getLast()
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::last()
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::destroyChild(TObject*)
</UL>

<P><STRONG><a name="[247]"></a>TObjList::getNext()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, twidget.o(i._ZN8TObjList7getNextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TObjList::getNext()
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::next()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll(TWidget*)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[245]"></a>TObjList::getFirst()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, twidget.o(i._ZN8TObjList8getFirstEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TObjList::getFirst()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::first()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::showAll(TWidget*)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgChildsXY(TWidget*)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[1da]"></a>TObjList::TObjList()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tconnection.o(i._ZN8TObjListC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TObjList::TObjList()
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::TList()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[2db]"></a>TObjList::TObjList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tconnection.o(i._ZN8TObjListC1Ev), UNUSED)

<P><STRONG><a name="[12b]"></a>TObjList::~TObjList__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tconnection.o(i._ZN8TObjListD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TObjList::~TObjList__deallocating() &rArr; TObjList::~TObjList() &rArr; TList&lang;TObject*&rang;::~TList() &rArr; TList&lang;TObject*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::~TObjList()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV8TObjList)
</UL>
<P><STRONG><a name="[12a]"></a>TObjList::~TObjList()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tconnection.o(i._ZN8TObjListD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TObjList::~TObjList() &rArr; TList&lang;TObject*&rang;::~TList() &rArr; TList&lang;TObject*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::~TList()
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::~TObjList__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV8TObjList)
</UL>
<P><STRONG><a name="[2dc]"></a>TObjList::~TObjList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, tconnection.o(i._ZN8TObjListD1Ev), UNUSED)

<P><STRONG><a name="[130]"></a>TCheckBox::sig_depress(long, long)</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, tcheckbox.o(i._ZN9TCheckBox11sig_depressEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = TCheckBox::sig_depress(long, long) &rArr; TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
</UL>
<P><STRONG><a name="[131]"></a>TCheckBox::sig_release(long, long)</STRONG> (Thumb, 162 bytes, Stack size 72 bytes, tcheckbox.o(i._ZN9TCheckBox11sig_releaseEll))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = TCheckBox::sig_release(long, long) &rArr; TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::callSlot(void(TObject::*)(int, int), long, long)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
</UL>
<P><STRONG><a name="[12f]"></a>TCheckBox::show()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tcheckbox.o(i._ZN9TCheckBox4showEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TCheckBox::show() &rArr; TWidget::refresh() &rArr; TWidget::rectCut(TRect*) &rArr;  TWidget::rectCut(TRect*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
</UL>
<P><STRONG><a name="[132]"></a>TCheckBox::release()</STRONG> (Thumb, 120 bytes, Stack size 64 bytes, tcheckbox.o(i._ZN9TCheckBox7releaseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = TCheckBox::release() &rArr; TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::refresh()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
</UL>
<P><STRONG><a name="[1b0]"></a>TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 160 bytes, Stack size 88 bytes, tcheckbox.o(i._ZN9TCheckBoxC1EllllPKcP7TWidget))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = TCheckBox::TCheckBox(long, long, long, long, const char*, TWidget*) &rArr; TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getRect()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::TAbstractButton__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::TBufPainter(unsigned long*, TRect*)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::drawCheck(long, long, long, long, const char*, bool, bool, unsigned long)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBuffer()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::height()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::getBackColor()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::getBufAddr()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>

<P><STRONG><a name="[2dd]"></a>TCheckBox::TCheckBox__sub_object(long, long, long, long, const char*, TWidget*)</STRONG> (Thumb, 0 bytes, Stack size 88 bytes, tcheckbox.o(i._ZN9TCheckBoxC1EllllPKcP7TWidget), UNUSED)

<P><STRONG><a name="[12e]"></a>TCheckBox::~TCheckBox__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tcheckbox.o(i._ZN9TCheckBoxD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TCheckBox::~TCheckBox__deallocating() &rArr; TCheckBox::~TCheckBox() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::~TCheckBox()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
</UL>
<P><STRONG><a name="[12d]"></a>TCheckBox::~TCheckBox()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, tcheckbox.o(i._ZN9TCheckBoxD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TCheckBox::~TCheckBox() &rArr; TWidget::~TWidget__sub_object() &rArr; TObject::~TObject__sub_object() &rArr; TObject::destroyChild(TObject*) &rArr;  TObject::destroyChild(TObject*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::~TCheckBox__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcheckbox.o(.constdata__ZTV9TCheckBox)
</UL>
<P><STRONG><a name="[2de]"></a>TCheckBox::~TCheckBox__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, tcheckbox.o(i._ZN9TCheckBoxD1Ev), UNUSED)

<P><STRONG><a name="[235]"></a>TFuncList::find(void(TObject::*)(int, int))</STRONG> (Thumb, 92 bytes, Stack size 44 bytes, tfunclist.o(i._ZN9TFuncList4findEM7TObjectFviiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TFuncList::find(void(TObject::*)(int, int))
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[1db]"></a>TFuncList::append(void(TObject::*)(int, int))</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, tfunclist.o(i._ZN9TFuncList6appendEM7TObjectFviiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TFuncList::append(void(TObject::*)(int, int)) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tFuncNode::tFuncNode(void(TObject::*)(int, int))
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[1d6]"></a>TFuncList::locate(unsigned long)</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, tfunclist.o(i._ZN9TFuncList6locateEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TFuncList::locate(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::active(long, long)
</UL>

<P><STRONG><a name="[1d9]"></a>TFuncList::TFuncList()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tfunclist.o(i._ZN9TFuncListC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[2df]"></a>TFuncList::TFuncList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, tfunclist.o(i._ZN9TFuncListC1Ev), UNUSED)

<P><STRONG><a name="[25b]"></a>tFuncNode::tFuncNode(void(TObject::*)(int, int))</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tfunclist.o(i._ZN9tFuncNodeC1EM7TObjectFviiE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tFuncNode::tFuncNode(void(TObject::*)(int, int))
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFuncList::append(void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[2e0]"></a>tFuncNode::tFuncNode__sub_object(void(TObject::*)(int, int))</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, tfunclist.o(i._ZN9tFuncNodeC1EM7TObjectFviiE), UNUSED)

<P><STRONG><a name="[20b]"></a>TTouchEvent::x() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZNK11TTouchEvent1xEv))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchReleaseEvent(TTouchEvent*)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchPressEvent(TTouchEvent*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchMoveEvent(TTouchEvent*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchReleaseEvent(TTouchEvent*)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchPressEvent(TTouchEvent*)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchMoveEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[20a]"></a>TTouchEvent::y() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tabstractbutton.o(i._ZNK11TTouchEvent1yEv))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchReleaseEvent(TTouchEvent*)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchPressEvent(TTouchEvent*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::touchMoveEvent(TTouchEvent*)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchMoveEvent(TTouchEvent*)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchReleaseEvent(TTouchEvent*)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchPressEvent(TTouchEvent*)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::touchMoveEvent(TTouchEvent*)
</UL>

<P><STRONG><a name="[249]"></a>TRect::intersects(const TRect&) const</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, trect.o(i._ZNK5TRect10intersectsERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::chgAllInValid(TObjList*, TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[253]"></a>TRect::top() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tpainter.o(i._ZNK5TRect3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[250]"></a>TRect::left() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tpainter.o(i._ZNK5TRect4leftEv))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[251]"></a>TRect::right() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tpainter.o(i._ZNK5TRect5rightEv))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[1d2]"></a>TRect::width() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, twidget.o(i._ZNK5TRect5widthEv))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::width()
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::paintMeta(TRect*)
</UL>

<P><STRONG><a name="[254]"></a>TRect::bottom() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tpainter.o(i._ZNK5TRect6bottomEv))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[25a]"></a>TRect::height() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, twidget.o(i._ZNK5TRect6heightEv))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::isInArea(long, long)
</UL>

<P><STRONG><a name="[24e]"></a>TRect::isValid() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tpainter.o(i._ZNK5TRect7isValidEv))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::repaintInvaild(TRect*, TRect*)
</UL>

<P><STRONG><a name="[258]"></a>TRect::intersect(const TRect&) const</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, trect.o(i._ZNK5TRect9intersectERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TRect::intersect(const TRect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRect::TRect()
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::rectCut(TRect*)
</UL>

<P><STRONG><a name="[240]"></a>TArray::data() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tarray.o(i._ZNK6TArray4dataEv))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::operator const char*() const
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::resize(unsigned long)
</UL>

<P><STRONG><a name="[238]"></a>TString::operator const char*() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tstring.o(i._ZNK7TStringcvPKcEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TString::operator const char*() const
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::data() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::getName()
</UL>

<P><STRONG><a name="[214]"></a>operator delete[] (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_del.o(i._ZdaPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::~TArray()
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::duplicate(const char*, unsigned long)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::~TBuffer()
</UL>

<P><STRONG><a name="[1e7]"></a>operator delete (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delete.o(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::deleteData(TArray::array_data*)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TString::~TString__deallocating()
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractSlider::~TAbstractSlider__deallocating()
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAbstractButton::~TAbstractButton__deallocating()
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User::~User__deallocating()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__sub_object()
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFrame::~TFrame__deallocating()
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::remove(TWidget*)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::~TDialog__deallocating()
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCheckBox::~TCheckBox__deallocating()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSlider::~TSlider__deallocating()
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRadioButton::~TRadioButton__deallocating()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPushButton::~TPushButton__deallocating()
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::~TLabel__deallocating()
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::~TList__deallocating()
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::clear()
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tCollection&lang;TObject*&rang;::deleteItem(void*)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::~TObjList__deallocating()
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::~TList__deallocating()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::clear()
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tCollection&lang;TWidget*&rang;::deleteItem(void*)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::~TWidget__deallocating()
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::~tWidgetList__deallocating()
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEvent::~TEvent__deallocating()
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::~TTouchEvent()
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchEvent::~TTouchEvent__deallocating()
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::remove(TObject*)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::clear()
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tCollection&lang;TConnection*&rang;::deleteItem(void*)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::~TObject__deallocating()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>

<P><STRONG><a name="[213]"></a>operator new[] (unsigned)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_new.o(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::duplicate(const char*, unsigned long)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::resize(unsigned long)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBuffer::TBuffer(unsigned long*, unsigned long, unsigned long, unsigned long)
</UL>

<P><STRONG><a name="[1d8]"></a>operator new(unsigned)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, new.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFuncList::append(void(TObject::*)(int, int))
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::newData()
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::TWidget__sub_object(long, long, long, long, const char*, TWidget*)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLabel::slot_showValue(long, long)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::setName(const char*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::append(TObject*)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::append(TWidget*)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::translate(TDirver*)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::append(TConnection*)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::addChild(TObject*)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>

<P><STRONG><a name="[25e]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2e1]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[151]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TIMEOUT_UserCallback
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::active(long, long)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::transform(TRect*)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::translate(TDirver*)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEvent::peErrMsg()
</UL>

<P><STRONG><a name="[99]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 8]<UL><LI> tabstractbutton.o(.constdata__ZTV15TAbstractButton)
<LI> tabstractslider.o(.constdata__ZTV15TAbstractSlider)
<LI> tframe.o(.constdata__ZTV6TFrame)
<LI> tconnection.o(.constdata__ZTV11tCollectionIP7TObjectE)
<LI> twidget.o(.constdata__ZTV11tCollectionIP7TWidgetE)
<LI> twidget.o(.constdata__ZTV7TWidget)
<LI> tobject.o(.constdata__ZTV11tCollectionIP11TConnectionE)
<LI> tobject.o(.constdata__ZTV7TObject)
</UL>
<P><STRONG><a name="[25c]"></a>free</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, mallocr.o(i.__free$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[13f]"></a>malloc</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, mallocr.o(i.__malloc$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[2e2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2e3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2e4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[74]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usart_conf.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[205]"></a>getState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tgui_conf.o(i.getState))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchDirver::obtainData()
</UL>

<P><STRONG><a name="[208]"></a>getTouchX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tgui_conf.o(i.getTouchX))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchDirver::obtainData()
</UL>

<P><STRONG><a name="[209]"></a>getTouchY</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tgui_conf.o(i.getTouchY))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TTouchDirver::obtainData()
</UL>

<P><STRONG><a name="[15d]"></a>guiTouchDown</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, tgui_conf.o(i.guiTouchDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = guiTouchDown
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Down
</UL>

<P><STRONG><a name="[15f]"></a>guiTouchUp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tgui_conf.o(i.guiTouchUp))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Up
</UL>

<P><STRONG><a name="[1d3]"></a>gui_dma2d_memset</STRONG> (Thumb, 148 bytes, Stack size 96 bytes, tgui_conf.o(i.gui_dma2d_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TBufPainter::paintMeta(TRect*)
</UL>

<P><STRONG><a name="[6e]"></a>main</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = main &rArr; GTP_Init_Panel &rArr; GTP_Read_Version &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASHConfig
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Basic_Config
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_RED_Config
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GREEN_Config
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_BLUE_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[291]"></a>pvPortMalloc</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[29f]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[280]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[212]"></a>realloc</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, mallocr.o(i.realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TArray::resize(unsigned long)
</UL>

<P><STRONG><a name="[269]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[271]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[27f]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[26b]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[26a]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[26d]"></a>vPortEnterCritical</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[26f]"></a>vPortExitCritical</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[27b]"></a>vPortFree</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[29b]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[294]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[273]"></a>vQueueAddToRegistry</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, queue.o(i.vQueueAddToRegistry))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[28a]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[290]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[297]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[296]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[298]"></a>vTaskPriorityInherit</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2a0]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[267]"></a>vTaskStartScheduler</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[275]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[135]"></a>vTaskSwitchContext</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[29a]"></a>xPortStartScheduler</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[272]"></a>xQueueGenericCreate</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[288]"></a>xQueueGenericReceive</STRONG> (Thumb, 446 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[27d]"></a>xQueueGenericReset</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[2a2]"></a>xQueueGenericSend</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[2a3]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[2a1]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[266]"></a>xTaskCreate</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[29e]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[28b]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[19c]"></a>xTaskIncrementTick</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[27a]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[28f]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[276]"></a>xTaskResumeAll</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[299]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[285]"></a>xTimerGenericCommand</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[9a]"></a>tCollection&lang;TConnection*&rang;::deleteItem(void*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tobject.o(t._ZN11tCollectionIP11TConnectionE10deleteItemEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tCollection&lang;TConnection*&rang;::deleteItem(void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::deleteItem(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tobject.o(.constdata__ZTV11tCollectionIP11TConnectionE)
</UL>
<P><STRONG><a name="[9b]"></a>tCollection&lang;TObject*&rang;::deleteItem(void*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tconnection.o(t._ZN11tCollectionIP7TObjectE10deleteItemEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tCollection&lang;TObject*&rang;::deleteItem(void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::deleteItem(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV11tCollectionIP7TObjectE)
</UL>
<P><STRONG><a name="[9c]"></a>tCollection&lang;TWidget*&rang;::deleteItem(void*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, twidget.o(t._ZN11tCollectionIP7TWidgetE10deleteItemEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tCollection&lang;TWidget*&rang;::deleteItem(void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::deleteItem(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV11tCollectionIP7TWidgetE)
</UL>
<P><STRONG><a name="[a3]"></a>TList&lang;TConnection*&rang;::deleteItem(void*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, tobject.o(t._ZN5TListIP11TConnectionE10deleteItemEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TList&lang;TConnection*&rang;::deleteItem(void*) &rArr; tCollection&lang;TConnection*&rang;::deleteItem(void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tCollection&lang;TConnection*&rang;::deleteItem(void*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tobject.o(.constdata__ZTV5TListIP11TConnectionE)
<LI> tobject.o(.constdata__ZTV12TConnectList)
</UL>
<P><STRONG><a name="[200]"></a>TList&lang;TConnection*&rang;::next()</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tconnectlist.o(t._ZN5TListIP11TConnectionE4nextEv))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::find(void(TObject::*)(int, int))
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::clear()
</UL>

<P><STRONG><a name="[da]"></a>TList&lang;TConnection*&rang;::clear()</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tobject.o(t._ZN5TListIP11TConnectionE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TList&lang;TConnection*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::first()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::next()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::clear()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tobject.o(.constdata__ZTV5TListIP11TConnectionE)
</UL>
<P><STRONG><a name="[1ff]"></a>TList&lang;TConnection*&rang;::first()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tconnectlist.o(t._ZN5TListIP11TConnectionE5firstEv))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::find(void(TObject::*)(int, int))
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TConnection*&rang;::clear()
</UL>

<P><STRONG><a name="[237]"></a>TList&lang;TConnection*&rang;::append(TConnection*)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, tobject.o(t._ZN5TListIP11TConnectionE6appendES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TList&lang;TConnection*&rang;::append(TConnection*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[1fd]"></a>TList&lang;TConnection*&rang;::locate(unsigned long)</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, tobject.o(t._ZN5TListIP11TConnectionE6locateEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TList&lang;TConnection*&rang;::locate(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnectList::at(unsigned long)
</UL>

<P><STRONG><a name="[234]"></a>TList&lang;TConnection*&rang;::TList()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tobject.o(t._ZN5TListIP11TConnectionEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::connect(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
</UL>

<P><STRONG><a name="[2e5]"></a>TList&lang;TConnection*&rang;::TList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, tobject.o(t._ZN5TListIP11TConnectionEC1Ev), UNUSED)

<P><STRONG><a name="[de]"></a>TList&lang;TObject*&rang;::deleteItem(void*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, tconnection.o(t._ZN5TListIP7TObjectE10deleteItemEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TList&lang;TObject*&rang;::deleteItem(void*) &rArr; tCollection&lang;TObject*&rang;::deleteItem(void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tCollection&lang;TObject*&rang;::deleteItem(void*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tconnection.o(.constdata__ZTV5TListIP7TObjectE)
<LI> tconnection.o(.constdata__ZTV8TObjList)
</UL>
<P><STRONG><a name="[230]"></a>TList&lang;TObject*&rang;::relinkNode(tLNode&lang;TObject*&rang;*)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tobject.o(t._ZN5TListIP7TObjectE10relinkNodeEP6tLNodeIS1_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TList&lang;TObject*&rang;::relinkNode(tLNode&lang;TObject*&rang;*) &rArr; TList&lang;TObject*&rang;::unlink()
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::relink(tLNode&lang;TObject*&rang;*)
</UL>

<P><STRONG><a name="[df]"></a>TList&lang;TObject*&rang;::compareItems(TObject*, TObject*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tconnection.o(t._ZN5TListIP7TObjectE12compareItemsES1_S1_))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::compareItems(TObject*, TObject*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV5TListIP7TObjectE)
</UL>
<P><STRONG><a name="[232]"></a>TList&lang;TObject*&rang;::find(TObject*, bool)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tobject.o(t._ZN5TListIP7TObjectE4findES1_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TList&lang;TObject*&rang;::find(TObject*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::unlink(TObject*)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::remove(TObject*)
</UL>

<P><STRONG><a name="[22c]"></a>TList&lang;TObject*&rang;::last()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tobject.o(t._ZN5TListIP7TObjectE4lastEv))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getLast()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::destroyChild(TObject*)
</UL>

<P><STRONG><a name="[1fa]"></a>TList&lang;TObject*&rang;::next()</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tdialog.o(t._ZN5TListIP7TObjectE4nextEv))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::~TList()
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::clear()
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getNext()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::unlink()
</UL>

<P><STRONG><a name="[db]"></a>TList&lang;TObject*&rang;::clear()</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tconnection.o(t._ZN5TListIP7TObjectE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TList&lang;TObject*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::first()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::next()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::~TList()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV5TListIP7TObjectE)
</UL>
<P><STRONG><a name="[1f5]"></a>TList&lang;TObject*&rang;::first()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tdialog.o(t._ZN5TListIP7TObjectE5firstEv))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::~TList()
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::clear()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::getFirst()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TApplication::visitAll(TObject*, TApplication*)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::unlink()
</UL>

<P><STRONG><a name="[1dc]"></a>TList&lang;TObject*&rang;::append(TObject*)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, tconnection.o(t._ZN5TListIP7TObjectE6appendES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TList&lang;TObject*&rang;::append(TObject*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::TConnection(void(TObject::*)(int, int), TObject*, void(TObject::*)(int, int))
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::append(TObject*)
</UL>

<P><STRONG><a name="[1d5]"></a>TList&lang;TObject*&rang;::locate(unsigned long)</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, tconnection.o(t._ZN5TListIP7TObjectE6locateEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TList&lang;TObject*&rang;::locate(unsigned long)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TConnection::active(long, long)
</UL>

<P><STRONG><a name="[22d]"></a>TList&lang;TObject*&rang;::remove(TObject*)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, tobject.o(t._ZN5TListIP7TObjectE6removeES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TList&lang;TObject*&rang;::remove(TObject*) &rArr; TList&lang;TObject*&rang;::find(TObject*, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::unlink()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::find(TObject*, bool)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::destroyChild(TObject*)
</UL>

<P><STRONG><a name="[233]"></a>TList&lang;TObject*&rang;::unlink()</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, tobject.o(t._ZN5TListIP7TObjectE6unlinkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TList&lang;TObject*&rang;::unlink()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::first()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::next()
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::unlink(TObject*)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::remove(TObject*)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::relinkNode(tLNode&lang;TObject*&rang;*)
</UL>

<P><STRONG><a name="[23d]"></a>TList&lang;TObject*&rang;::findRef(TObject*, bool)</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, tobject.o(t._ZN5TListIP7TObjectE7findRefES1_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TList&lang;TObject*&rang;::findRef(TObject*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::addChild(TObject*)
</UL>

<P><STRONG><a name="[23c]"></a>TList&lang;TObject*&rang;::TList()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tconnection.o(t._ZN5TListIP7TObjectEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::TObjList()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObject::addChild(TObject*)
</UL>

<P><STRONG><a name="[2e6]"></a>TList&lang;TObject*&rang;::TList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, tconnection.o(t._ZN5TListIP7TObjectEC1Ev), UNUSED)

<P><STRONG><a name="[dd]"></a>TList&lang;TObject*&rang;::~TList__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, tconnection.o(t._ZN5TListIP7TObjectED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TList&lang;TObject*&rang;::~TList__deallocating() &rArr; TList&lang;TObject*&rang;::~TList() &rArr; TList&lang;TObject*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::~TList()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV5TListIP7TObjectE)
</UL>
<P><STRONG><a name="[dc]"></a>TList&lang;TObject*&rang;::~TList()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, tconnection.o(t._ZN5TListIP7TObjectED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TList&lang;TObject*&rang;::~TList() &rArr; TList&lang;TObject*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::first()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::next()
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TObject*&rang;::~TList__deallocating()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TObjList::~TObjList()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tconnection.o(.constdata__ZTV5TListIP7TObjectE)
</UL>
<P><STRONG><a name="[2e7]"></a>TList&lang;TObject*&rang;::~TList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, tconnection.o(t._ZN5TListIP7TObjectED1Ev), UNUSED)

<P><STRONG><a name="[a0]"></a>TList&lang;TWidget*&rang;::deleteItem(void*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, twidget.o(t._ZN5TListIP7TWidgetE10deleteItemEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TList&lang;TWidget*&rang;::deleteItem(void*) &rArr; tCollection&lang;TWidget*&rang;::deleteItem(void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tCollection&lang;TWidget*&rang;::deleteItem(void*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> twidget.o(.constdata__ZTV5TListIP7TWidgetE)
<LI> twidget.o(.constdata__ZTV11tWidgetList)
</UL>
<P><STRONG><a name="[a1]"></a>TList&lang;TWidget*&rang;::compareItems(TWidget*, TWidget*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, twidget.o(t._ZN5TListIP7TWidgetE12compareItemsES1_S1_))
<BR>[Address Reference Count : 2]<UL><LI> twidget.o(.constdata__ZTV5TListIP7TWidgetE)
<LI> twidget.o(.constdata__ZTV11tWidgetList)
</UL>
<P><STRONG><a name="[2a5]"></a>TList&lang;TWidget*&rang;::find(TWidget*, bool)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tdialog.o(t._ZN5TListIP7TWidgetE4findES1_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TList&lang;TWidget*&rang;::find(TWidget*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::remove(TWidget*)
</UL>

<P><STRONG><a name="[1ed]"></a>TList&lang;TWidget*&rang;::next()</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tpainter.o(t._ZN5TListIP7TWidgetE4nextEv))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::getNext()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::unlink()
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::~TList()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::clear()
</UL>

<P><STRONG><a name="[e0]"></a>TList&lang;TWidget*&rang;::clear()</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, twidget.o(t._ZN5TListIP7TWidgetE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TList&lang;TWidget*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::first()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::next()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::~TList()
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::clear()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV5TListIP7TWidgetE)
</UL>
<P><STRONG><a name="[1ef]"></a>TList&lang;TWidget*&rang;::first()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tpainter.o(t._ZN5TListIP7TWidgetE5firstEv))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::getFirst()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::unlink()
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TDialog::touchPressEvent(TTouchEvent*)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::~TList()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::clear()
</UL>

<P><STRONG><a name="[1e9]"></a>TList&lang;TWidget*&rang;::append(TWidget*)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, twidget.o(t._ZN5TListIP7TWidgetE6appendES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TList&lang;TWidget*&rang;::append(TWidget*) &rArr; operator new(unsigned) &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::append(TWidget*)
</UL>

<P><STRONG><a name="[1eb]"></a>TList&lang;TWidget*&rang;::remove(TWidget*)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, tdialog.o(t._ZN5TListIP7TWidgetE6removeES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TList&lang;TWidget*&rang;::remove(TWidget*) &rArr; TList&lang;TWidget*&rang;::find(TWidget*, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::unlink()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::find(TWidget*, bool)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::remove(TWidget*)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::remInvalid(TWidget*)
</UL>

<P><STRONG><a name="[2a6]"></a>TList&lang;TWidget*&rang;::unlink()</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, tdialog.o(t._ZN5TListIP7TWidgetE6unlinkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TList&lang;TWidget*&rang;::unlink()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::first()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::next()
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::remove(TWidget*)
</UL>

<P><STRONG><a name="[24a]"></a>TList&lang;TWidget*&rang;::findRef(TWidget*, bool)</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, twidget.o(t._ZN5TListIP7TWidgetE7findRefES1_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TList&lang;TWidget*&rang;::findRef(TWidget*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[24c]"></a>TList&lang;TWidget*&rang;::TList()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, twidget.o(t._ZN5TListIP7TWidgetEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWidget::addAchgInvalid(TWidget*, TRect*, TRect*)
</UL>

<P><STRONG><a name="[2e8]"></a>TList&lang;TWidget*&rang;::TList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, twidget.o(t._ZN5TListIP7TWidgetEC1Ev), UNUSED)

<P><STRONG><a name="[e2]"></a>TList&lang;TWidget*&rang;::~TList__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, twidget.o(t._ZN5TListIP7TWidgetED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TList&lang;TWidget*&rang;::~TList__deallocating() &rArr; TList&lang;TWidget*&rang;::~TList() &rArr; TList&lang;TWidget*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::~TList()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV5TListIP7TWidgetE)
</UL>
<P><STRONG><a name="[e1]"></a>TList&lang;TWidget*&rang;::~TList()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, twidget.o(t._ZN5TListIP7TWidgetED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TList&lang;TWidget*&rang;::~TList() &rArr; TList&lang;TWidget*&rang;::clear() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::first()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::next()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TList&lang;TWidget*&rang;::~TList__deallocating()
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tWidgetList::~tWidgetList()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> twidget.o(.constdata__ZTV5TListIP7TWidgetE)
</UL>
<P><STRONG><a name="[2e9]"></a>TList&lang;TWidget*&rang;::~TList__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, twidget.o(t._ZN5TListIP7TWidgetED1Ev), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[19d]"></a>SetSysClock</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[17e]"></a>LCD_GPIO_Config</STRONG> (Thumb, 740 bytes, Stack size 16 bytes, lcd_conf.o(i.LCD_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[194]"></a>SDRAM_GPIO_Config</STRONG> (Thumb, 908 bytes, Stack size 16 bytes, sdram_conf.o(i.SDRAM_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMConfig
</UL>

<P><STRONG><a name="[197]"></a>SDRAM_InitSequence</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, sdram_conf.o(i.SDRAM_InitSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetRefreshCount
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMCmdConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_GetFlagStatus
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMConfig
</UL>

<P><STRONG><a name="[19a]"></a>SDRAM_delay</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, sdram_conf.o(i.SDRAM_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDRAM_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[1a9]"></a>USART1_NVICConfig</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usart_conf.o(i.USART1_NVICConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_NVICConfig &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1Config
</UL>

<P><STRONG><a name="[75]"></a>task0_temp(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i._Z10task0_tempPv))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[77]"></a>task2_tgui(void*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i._Z10task2_tguiPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = task2_tgui(void*) &rArr; TGuiRun() &rArr; TSlider::TSlider(long, long, long, long, const char*, TWidget*, bool) &rArr; TBufPainter::drawHorizSlider(long, long, long, long, long, long, bool, unsigned long) &rArr; TBufPainter::drawButton(long, long, long, long, const char*, bool) &rArr; TBufPainter::drawCenterEnText(long, long, long, long, const char*, unsigned long, unsigned long, bool, bool) &rArr; TBufPainter::drawEnText(long, long, const char*, long, bool) &rArr; TBufPainter::displayEnChar(long, long, unsigned char, bool) &rArr; TBufPainter::drawChar(long, long, const unsigned short*, bool) &rArr; TBufPainter::drawPoint(long, long) &rArr; TBufPainter::paintMeta(TRect*) &rArr; gui_dma2d_memset &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TGuiRun()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[78]"></a>task3_driver(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i._Z12task3_driverPv))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[76]"></a>task1_led(void*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i._Z9task1_ledPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = task1_led(void*) &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_RED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[1a2]"></a>TIM_Mode_Config</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tim_conf.o(i.TIM_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Basic_Config
</UL>

<P><STRONG><a name="[1a1]"></a>TIMx_NVIC_Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tim_conf.o(i.TIMx_NVIC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMx_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Basic_Config
</UL>

<P><STRONG><a name="[278]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvCopyDataFromQueue &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[279]"></a>prvCopyDataToQueue</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[27c]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[282]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[283]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[28e]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[268]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[26c]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[274]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[277]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[7a]"></a>prvIdleTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[27e]"></a>prvInitialiseNewTask</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[26e]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[2a4]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[270]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[28d]"></a>prvGetNextExpireTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(i.prvGetNextExpireTime))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[281]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[284]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, timers.o(i.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[286]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[289]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[287]"></a>prvSampleTimeNow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[28c]"></a>prvSwitchTimerLists</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[7b]"></a>prvTimerTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[79]"></a>prvTaskExitError</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[292]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[293]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[14f]"></a>GTP_Get_Info</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gt9xx.o(i.GTP_Get_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GTP_Get_Info &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[150]"></a>GTP_I2C_Read</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, gt9xx.o(i.GTP_I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
</UL>

<P><STRONG><a name="[153]"></a>GTP_I2C_Test</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gt9xx.o(i.GTP_I2C_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GTP_I2C_Test &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[154]"></a>GTP_I2C_Write</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, gt9xx.o(i.GTP_I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GTP_I2C_Write &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[15c]"></a>GTP_Touch_Down</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gt9xx.o(i.GTP_Touch_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GTP_Touch_Down &rArr; guiTouchDown
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiTouchDown
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[15e]"></a>GTP_Touch_Up</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gt9xx.o(i.GTP_Touch_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GTP_Touch_Up
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guiTouchUp
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[15b]"></a>Goodix_TS_Work_Func</STRONG> (Thumb, 386 bytes, Stack size 136 bytes, gt9xx.o(i.Goodix_TS_Work_Func))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Up
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Down
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_TouchProcess
</UL>

<P><STRONG><a name="[152]"></a>I2C_Transfer</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gt9xx.o(i.I2C_Transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
</UL>

<P><STRONG><a name="[176]"></a>Delay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, touch_i2c.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ResetChip
</UL>

<P><STRONG><a name="[161]"></a>I2C_GPIO_Config</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, touch_i2c.o(i.I2C_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[169]"></a>I2C_Mode_Config</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, touch_i2c.o(i.I2C_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = I2C_Mode_Config &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[16d]"></a>I2C_TIMEOUT_UserCallback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, touch_i2c.o(i.I2C_TIMEOUT_UserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[25f]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[263]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[262]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[261]"></a>internal_alloc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mallocr.o(i.internal_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[72]"></a>[local to arm_exceptions_c]::__default_terminate_handler()</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to arm_exceptions_c]::__default_terminate_handler()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
